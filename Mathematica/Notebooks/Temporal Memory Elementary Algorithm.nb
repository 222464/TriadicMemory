(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[         0,          0]
NotebookDataLength[    264391,       5640]
NotebookOptionsPosition[    259424,       5542]
NotebookOutlinePosition[    259943,       5562]
CellTagsIndexPosition[    259900,       5559]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Temporal Memory  - Elementary Algorithm", "Subsection",ExpressionUUID->"b0407cdc-a0b0-403f-8241-b4228ce62651"],

Cell["\<\
Peter Overmann, 21 Jul 2022

The simplest possible temporal memory algorithm composed of two triadic \
memory instances M1 and M2.

M1 creates a random context vector for a consecutive pair of inputs, and \
feeds it back to the delayed input.
M2 learns the association of the current input, the previous input, and the \
delayed previous input plus feedback.

The prediction step, not explicitly shown in the following circuit diagram, \
is a query on M2 performed at the moment its two bottom positions are filled \
with new values propagated from M1.
\
\>", "Text",
 CellGroupingRules->{
  "GroupTogetherGrouping", 
   10000.},ExpressionUUID->"f28cdd66-877d-4532-b44e-f14d86f80b00"],

Cell[TextData[{
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
y19m1SXGyPMqcJ+VLonOwwPEwa/5b+CXr46eSdkjiQOk4rRPsukUO30yacE2
j545EuUvPUCfAMhpixYtEtWqVXOlS4w5fvy46qcVShnbJNIlxpw6d1H1w80Z
p89fErekaRL6BFZk2ydOOsVan1SejV+2gfsy+mXlF0fpEwA56eOPPxa/+93v
XO0SY44cOeLKY9y/f3/GWb58uekUFRWJhQsXiqFDh0bP0gwcOFD069dP9O3b
V7z99tvizTffFK+//rp47bXXovdyadWqlfj9738vWrRoIR555BHRtGlT0bhx
Y9GoUSPxwAMPiFtuuUXcfPPNombNmqJ69erixhtvFDfccIO4/vrrxa9//Wvx
7//+7+Lf/u3fxE9/+lPxr//6r+LHP/6x+NGPfiT+5V/+RfzzP/+z+Kd/+ifx
V3/1V+Iv//Ivo9dglvPnf/7n0fmzP/sz8ad/+qemr6X8dffee2/09bDSJcaU
lHIPNb+UlJanaZKxcQOk4laf2OkUO32yZQ/fd/LL1v2n6RMAWsjmvbgxY8eO
zTht27YV//3f/+1Jlxjz85//XPzjP/5jdOS1v+T8/d//vfi7v/u76Pzt3/6t
p39/2KZ+/frRjxGrbSKnouKK4o/o3CFf61Q9Qp/AKrf7xEqn2OmTQ8fO+vyK
5K7Dxy/QJ0AOk987T/xa3rJly7ipXbt2xvmP//iPtKP6/S0T7Ln99tujH69W
uqTawwPFjU0G0ic+quyT9F1Sq+W46ACpeNUnxph1ip0+OX2+RNErk3vOXCil
T4Acpvp9J8NYmVtvvTX68ZqpTWSXGMP+Lv9U7u8y75HEUf2xxDCxnWKnT0ou
lyv+TMsdpZcr6BMgh6n+d4Lxbr7//e9H72Uvz3bIMxzy7Mdf//Vfix/+8IfR
/WVyv5ncfybPhcizI3Kd62c/+5n4r//6L/E///M/4he/+IX41a9+FT1bIs+Z
yHWyunXrRvdayX/f77nnHnH//feLhx56KHpOpX379uLpp58WnTt3Fl27dhUv
vvii6N69e3SNrlevXqJ3795i/PjxYvLkyaKgoEDMmDFDzJ49WyxYsEAsXrw4
uj9P7uE7fPiwOHbsmPjuu+/E2bNnxaVLl6o+XjOtmcTOmXOX0nzkw03R8/Fp
moQ+YXQc+XXMTp+wJusf+VrTJ0DuUv3vQ+xk2iMmJ9M+s8S9acbIc9+33XZb
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
FxAkZ3cYGp9zOgzV0ipFvx4lf5r1ulRUVut+FK5VVlXL+DnrpHn3sdK4+LH6
yegUt6PUNQ0DIJroE4RFvE80n0HJbJT58qu6aXPLQhkw4c/y6tufy/GK/P15
w/i9Vr2zVx6e9La0v+Pl2i5JTHqfKOzx8vM9w0CQJPokeRo6xalVHvGsVdrf
OEGWvf5RKPaMGte4bO1WueLmSSldksvk0jMAook+QVio9onXe7xU+yQxv7xp
QaxVFsk9T6yV51bukI8+OejpHjDj1/pw10F5vuxj+X3JG3L5XUvl0ltfqp3k
NsmyT/zc4wUEydlXDGkY21ZxXlPJplXSe+WKmyfKwlc2BXTP6ElZVLZZruw/
WRoVj7KZx+rHq36xGwDRRJ8gLKz6ROcZFGOPl1mfpE+72xZL/0dXy8jp78rs
Fdtl9Tt75MO//F/8ncXG+zgrqmrk5MlT8TH+e+Nf27P/mHzwySFZ/e5embNi
p4x69n3pP3KNtL9riVx6y4u1k+gSqz4J2B4vIEhS+sSuU1y1SnZ7wJJbpU2/
Upmy8A059NUx3Y9IDn59TKYuelPa3zDBoUv0DIBook8QFok+0fkdFJU1FLM+
+WX/hfKr5Ll5Ueb0f0EuSZ5bFpvMiw1tYtYnHq2h+LXHCwiSsy8fHBuTRslr
q1j3yvldRsqdw+fLstc/lPITlXl7LsbvZew3u2v4AinqMloadx6ZMo2KR0oT
m6FPAORq165dKX1y+umn674kwFR9nwT4DIplo6T3iVmjpPeJaaPkp0/82uMF
BEltnwxu6BSXreLuvIrqPjDzXimKtcoNA2bF11U2b9/r+Z5R49c01klufHiO
NO36WPybkqkzMqdpVNwwdm3jNMm/jvHrAogm+gRh4aZPArfHy68+8XmPl9dr
KECQnNVhcP3kv1Vy65WmXUZJj7unyoBxS+Tp+X+W5Ws/ko1b98TfWfzVkePx
d4LV7xmN/ffGv2b874y/ZvnarfH/mwHjlkrP302VZrEeMb5zn/jWvTeTW8+o
zQjdP0IAfEKfICyS+yRI7xmO6h4vP9ZQgCA5q8OglEbJqlWU9oF53SvWe8LM
3xPm/G175xmRMt51TG4DIJroE4RFSp+o7PHKok8Kbo+X199qvJM+QXic1X5Q
7XQY5GurZK6tqPaK6vkVtWYx7xYv2iX7zskcd78egGiiTxAWbvuEPV7Oe7zy
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
SYxxXgXeSPRJ7VivpezexzPPp8++/Fpa9ZnWMDadAgAAoII+qbVixQopKiry
pEsSc+DAAd23FRmpfWK9lvL10RO6L7WgfHXsRGqf2LQKAACAikLvk3Xr1snF
F1/saZckZu/evZ5c465duxzH+PtmNmVlZbJ8+XKZMGFC/CzNuHHjZOzYsTJq
1Ch59NFHZdiwYTJ48GAZOHBg/Fsuffv2ld/85jfSu3dvufrqq6V79+7StWtX
6dKli3Tu3FlatmwpF1xwgTRv3lyaNm0q559/vjRp0kQaN24s5557rvzXf/2X
/Od//qf8x3/8h/z4xz+W0047TX70ox/JD3/4Q/m3f/s3+cEPfiD/8A//IN/+
9rfj72A25u/+7u/i87d/+7fyrW99y+J9aN+S7/34HJNOSW2UispqT5451FRU
1kjLa6daN0rSAAAAqAhan+TyZ/HETJ061XFuuukm+Z//+R9fuiQxP/3pT+X7
3/9+fIx3fxnzL//yL/K9730vPv/8z//s6+8ftfmn035uuo6SvJZy8uQprT+/
hcZ43kafJA99AgAAcpHeJ+3atZM+ffpkjPHXOc3pp59uO7r/fMuEe/7phz+T
oq6PWzaKsZZCn+SXWZ9Y9QoAAIAKoz10/7mTYVTmOz/4iZzfZaycZzSKRaew
vyu/avd3Takb+04BAABQpfvPnYx/841vfCP+LXvjbIdx1sM4+/GP//iP8t3v
fje+v8zYb2bsPzPOhRhnR4x1rp/85Cfys5/9TP73f/9XzjjjDDn77LPjZ0uM
cybGOtkll1wibdq0kfbt28sVV1whnTp1kquuuip+TqV///5y++23y1133SX3
3nuv3HffffLggw/Gz7cMGTJEhg8fLtOnT5dZs2bJ3LlzZcGCBfLiiy/KsmXL
ZOXKlfH9ecYevj179sj+/fvl4MGDcuTIEWlSPCreJomxapTDR4/r/rdTQTl8
9ERSn6QPfQIAALKj+8/QyeO0R8wYp31mZvvTjDHOfV900UXxsx/5uJcLL7xQ
evXqFf99jbPnxpmX2267rf7P7vfff3/8rPqTTz4pEydOlGeeeUZmzJghc+bM
ib/nePHixbJ06dL6P7cbZ/k3bNgg7733nmzZskW2bdsmH3/8sezevVv27dsn
f/3rX+Wrr76Kf+++qqpK94+Vp5LbxK5TeL9wfhnvF255zTM2jdIwAAAAqoz/
bNvpPLnTmfTEf+5tN0Fi/Pnf6/cJp8+bb76p+zYjw6pPUholNpu279N9qQVl
844v5YJYnyQPfQIAAJA94927fr1feO3atbpvLzLs+iS5U1as3677UgvKK29+
ktEnVr0CAAAAdevXr4+fpfCyT1atWqX7tiKjSZcx8XFqlCkLN+i+1IIy/cWN
ckHvp2vHoVMAAADg3qZNm6RHjx7yzW9+M+c+Mb5JD28k+sSpUR4u5Znn05Cn
1jT0SfrQJwAAAJ7ZuXNn/Ey78V3zbPtkyZIlum8jMpL7xK5Trr53lu5LLSjX
PLgw1iKTrRslaQAAAJA74z23d955Z/ydvG77ZNGiRbovPzLM+sSsU1r0HCeV
VTW6L7cgVFXXyC/6TJEWsT5JHqteAQAAgHeMd/cOGDAg/r0Q1T6ZN2+e7suO
jCZdRteNc6O8v3WP7sstCJu2f5HRJlZDnwAAAPjD+FbgiBEj5LTTTnPsk9mz
Z+u+3MhoUjzasVESncIZ+fyY/uL7sfaYlDbWjQIAAAD/nDhxQkpLS+Pfi7Tq
E+M76fBGvE8S49Ap/R6aq/tyC8LNw14y6ROzoU8AAADypbq6WqZNmyZnnnlm
Rp88/TR7WrzSuPix1Eax6ZSibo/L0fIK3ZccaUfLK6XlNZOlea+n4tPCGIdO
AQAAQH4tWLAg5Zv0EyZM0H1JkWH0SWLMGyW1U15c/aHuS460Ja9vr28Tq0lv
FgAAAOhhfPekdevWUlJSovtSIiO5T+zXUmo75ZZhC3VfcqTdNXJprEEm1o19
pyQGAAAAepWXl+u+hMholNYnTp1S1HWMfHnwqO7LjqT9B49Jy96x5ug5sXZ6
mQ19AgAAgOhqVDyqbtQ75am563VfdiRNXvBOrEvG181E8zFpFgAAACAqGvpE
vVMuu268VFRW6770SDGeZ7ubp0mzWJuYjV2zAAAAAFGR2Se1Y9YoyZ0ye8m7
ui89UuYs2yzNevwpNhMsG8WqWwAAAICoaFI80rJR7Dqlbb+JUlVdo/vyI6Gq
+qR0uGV6XZ9YjXW3AAAAAFHRuPPIeKM4dYrZvq95KzbqvvxImF/2QawzSh36
xHoAAACAqDD6JDFuO8U4h8L3GnNjfI+x3U1TpWn3UmnaM3WaJYY+AQAAQIFo
3HlESqO47ZRHJpXpvoVQG/HMGmna48naPrGbntb9AgAAAERFbZ+MyKlTPtz5
he7bCKWP/rK/tk3sxqlbutMnAAAAiI7UPjHvlEbF9q1y9b0zpKbmpO5bCRXj
eV37x+elWbcn4+PYKTYDAAAAREWjTmZ94r5TnpixRvethErJrPVSFOsSs2mW
NvQJAAAACkWjTo/WjXqnWO39WvPOX3TfTii8/u4uKepeUjsWjeI0yf0CAAAA
REVDnzyq0Cr2ndL6mhLZd+Br3bcUaPv+ekR+dd0kadq1pH7qW8VsFFoFAAAA
iArzPnG/ppLY+3X1vdOl/ESV7tsKJOO5XPPHOVLUdVx8khvFbmz7JTYAAABA
VDTqNLxuvOkUY24YOIdvy6cxnsfNQxbK+d3G2U6iXdw0DAAAABAV5145PD65
d0pqq9w76gU5eeqU7tsLBOM5/GHMUin69RNpY98qqgMAAABERaJPMjsl9zWV
gaXLCr5RjPsfPKHMpE1UZ1z90CcAAACIunOvfKRuhtu0in2n2LXKPSNfkMqq
wtzrZdz3vaNfkvO6Ph6fouTJulcyBwAAAIiKhj5R6ZTs1lR++8BMOVpeoftW
88q43+sfmifndxlrO4l2MW0YxZ4BAAAAouKcjul9otoqdp2S2Sq/vuMZ+fzL
w7pvNy8+//Ir6Xb3DMc28WKMpgEAAACi4pyOw+om205Rb5WWVz8uy9dt1X3L
vlqxfrtc1LtUmnQZk5c+MQYAAACIioY+GZa3Vhk8frlUVFbrvnVPVVZVy9CJ
r8S7xO3QJwAAAEAt8z5R6ZTcWqX4lkny1uZPdd++JzZs2S3Fd0yJtcbounHf
KLkMAAAAEBXndBxaN3ad4l+r/OGxF2T/waO6H0NWjOu+b8wSaVI82ny6qAx9
AgAAACSc3WFofM7pMFRbq7ToPkYmzV0vx0Lyjq9j5ZUyef6fpeXVT0jj4scy
xrJXVEepaxoGAAAAiIpEnyRPQ6c4tcojnrZKy55jZdyzr8mhr47pfiymDn59
TJ6cuVYu7FVi2iW5TC49AwAAAETF2VcMaRjbVnFeU8mmVcx6pVm30TJ04grZ
9sl+3Y8nbvuu/TLsqVekRY/HpVHxKIV5rH687hizAQAAAKIipU/sOsVVq2S3
ByyzVYZL97unypSFb+T92ynGN0ymLnpTev5umjQpHlk/an2S3wEAAACi4uzL
B8fGpFHy2ipqvVJ86yQZ9XSZrNqwQw5+Xe7pczgc+/VWbdgpjz3zqhTf9rQ0
7jzSdholNYvZ0CcAAACAe7V9MrihU1y2irvzKqr7wKx7JblZ2t8wXm4fNk/G
zXhNFqzcKOvf3xXfi2W8V6v8RKVUVdfIqVMS/6/G/2z869t3HYj/dcZfb5x1
ueOR+dL+xgkp37q3HvtmUWmaxNi1jdMk/zrGrwsAAABExVkdBtdP/lvF215R
/0ak9bcjE9+692Zy6xm1GaH7RwgAAADwzFkdBqU0SlatorQPzOtesW8Wb7sl
tV+875jcBgAAAIiKs9oPqp0Og3xtlcy1FdVeUT2/otYs5t3iRbtk3zmZ4+7X
AwAAAKLi3I5DGhrFdas4nK33rVfcNotat9j3i46OcZ7zrmL9BAAAANHRstsI
OevygZmNotAqWa2t2PVKVvvBst0bln2/uOsZb8bq977o6rG6f4QAAAAAz3S8
oVTOMPokeRxbxcXaSg69kvsai1ft4l3LZD/m19Kp/1O6f4QAAAAAz9w6eLac
2W5gvFESo9QqrtdWXPSKU7N42i2p/eJdw/g3ydd6x7C5un+EAAAAAM9Mem6N
nNn+4dqJdYptq+SwtmLeK941i3W3eNEual2T22T3+09+fp3uHyEAAADAMxu3
ft7QJ+mT1irZ90oWayyqzaLQLc794nfDeDEm1xy7n03b9uj+EQIAAAA8delv
xlo3is3aiqteUVxj8WSdJct+UW8Z/8bNNba9rkT3jw4AAADgudIZr8Ya5KGk
cWgVr3rFRbM4dku27ZJjx3g+Lq63dOYa3T86AAAAgOcOf10uRZ2HyBntYm3S
tm7ctIqbXnHdLM7dYt0uaf3iRcPkc+qvO/O+mnZ5NP73DQAAAIiicdPL4n2S
Pqmt4r5XPGsW025RaxfnhnFoGs/H/vd3vpdBUvLsat0/MgAAAIBvTlRUSdu+
j8eaZEDSeNgr2TSLarfY9ou7htE/adducp/tflsiFZXVun9kAAAAAF9t2b5H
zr1iYFqjWLeK+X4wl81iszfM03ZRbhmncegJlXFznWn33PjKIbJlx17dPyoA
AABAXixY8Z6c0WZA7Zh2Sp6axWG9RalfvOgYv8biWs3ur/45xJ7JwtjfHwAA
AKCQTJu/Ts5o+2DD5Ngr1s2SZbeY9ItTwyi3jA9jdz0p9+Bwv9MWrNf9owEA
AABoYayjNOrwcGqnpPeKUrNo6BbFnjEblcax7Iv0yel6G55Fo46D4n8/AAAA
gEK2edvn0qbPWPl5rEmSx5tmse+WlHYx7RefGiZvk3Qfdfdo9gyMdxZs3s43
4gEAAACD8V6vkmmvSJNOg2Jt8kBGq3jfLGrt4q5j/Gobh9+jrX17NEzm/Z/X
eUj8nc/G8wcAAACQ6tBXx+XJ2J+Xf3XNY/LzNg/UtcoD7pvFk3Zx3zD6RvFe
6p7FJdeOlpIZZXx7EQAAAFC08aPP5KnZq+WWgc9Kh98+Ic27DJWz2g9QahbX
7ZJzwwRgku+j7h7PvvwhadFlmFzeb1zsOc6MPc/X4s8VAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAKLs/wG1eJpN
     "], {{0, 387.}, {404., 0}}, {0, 255},
     ColorFunction->RGBColor,
     ImageResolution->144],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->{219.10922851562455`, Automatic},
   ImageSizeRaw->{404., 387.},
   PlotRange->{{0, 404.}, {0, 387.}}]], "Input",ExpressionUUID->
  "88651216-7b0f-44ef-bc79-c4c6dc842ebf"],
 "\n\nThe following series of diagrams shows how a temporal sequence ABCD \
flows through this initially blank circuit.\n\n",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
3gzF1qx3H+UiiywSJk2aFMaOHRtGjBgRNt1007qfrfi1r32t73lBVaQ16Vax
/70zxhgTb7I0Z7117drMmj0nwn+96hs+fHjquVb9c3SymDV7bqbW1JtURex/
44wxxsSbodiZ7dxHmfwsM+09l19+eYlH3pzOJC+x/+0xxhgTf9I6MGv//ffG
J4S5c+dF/C9ZuhkzZqQ+b3KZZZb59DV77rln6vW46667Ih55Y8m1btZ+yQzb
4tzYhwp9Yv/7ZowxJv4Mpdasdx9l1vnrv/7r8PDDD8c+jbq0Jt0q9r9zxhhj
4k9acyatmaU351UnN/sstdRSqed48sknxz60jiXXOktr6k2qIva/bcYYY+LP
UOrMdu6j/PrXv576ntGjR5d45M3pTPIS+98cY4wx8SfpnzPOOGNQ/zVqvyV/
dEJf/1VtbbvmlltuST3XX/7yl5++ZsKECamvOeSQQyIeeWML1rYbt58GpEpi
//tmjDEm/iStmfazxm5szU7uo1xjjTXC22+/HfsUGtKadKvY/84ZY4yJP2k/
38zam1V7TtDiiy+eeo6jRo2KfWgdW/CcoOatqTepitj/thljjIk/Q6kz27mP
8hvf+Ebqe5Kf91aJziQvsf/NMcYYE2/Suq+m2f6Z/lOlz1qs2W+//VLPecyY
MZ++5pVXXkl9zcorrxzxyBtb8FmLjdtPA1Ilsf+dM8YYE2/S7p+s6dbW7PR5
lP/yL//St9+nqrQm3Sr2v3fGGGPiTcOfb2bszWkfz4rwX6/6ll566dRzPfXU
U2MfWsemfzw7U2vqTaoi9r9xxhhj4s1Q7Mx27qP8t3/7t9T3XHDBBSUeeXM6
E+gVC/97DL3iH//xH6N0X02z/TO1WXKjE8KHH31c4pXJZtlll0099+eff37A
6/7hH/5h0Gu+9KUvhalTp0Y68sY+mPpx0/YbtuXovgEgG71JLyq6NevdP1nT
ra3Z6X2UyXzxi18M48aNi30qqbQmQDH0Jr2qej/fTO/Nye9V6+eAw4cPTz3n
kSNHxj60jk1+b1qm1tSbANnoTHqVzmxPO/dR/u///b9T33PJJZeUeOTN6Uyg
V+g/elUR/Zel+2qa7Z9J2m+pjUb2zctvvF/CFcnugw8+CF/4whcGnf/f/u3f
DnrtBhtskHqtrr766ghH3twrb33YtP00IEBr9Ca9qKjWbHb/ZE23tma9+ygX
WWSR8Mwzz/TNvffeG8aOHRtWX331utfqa1/7WiX37WhNgGLoTXpVlX6+2ag3
n3vpnRKuRnbrrbde6rkfc8wxdd9z+eWX97X4wvPUU0+VeOTNvfDKe5laU28C
ZKMz6VU6sz3t3Ef5N3/zN12xlq4zgV6h/+hVefZfK91X02z/TK3/knns2TcL
vBKtu+yyy1Kvw7//+7+Hu+++e8BsvPHGqa/dY489Yp9Gqieef7tp+2lAgNbo
TXpR3q2Z9f7Jmm5tzXr3UX7+859PfX3SlPWu24gRI0o++ua0JkAx9Ca9qho/
32zem/c89kqBV6F1m222Weo12H///eu+5z//8z9T33P66aeXeOTN3ffk65la
c4Utzot9qABdQWfSq3Rme1q9j3LevHmpzy5K5sEHHyz56BvTmUCv0H/0qjz6
L+m+M888s6Xuq2m2f6Y2S24yMlx/93MFXIH27bLLLh1fuyWWWCL2aaS66b4/
N22/2gCQjd6kF+XVmq3eP1nTra3Z6n2UM2bM6Hsmetp7Nt1005KPvjmtCVAM
vUmviv3zzay9OfGmJws4+/btsMMOqddip512qvuef/u3f0t9z8SJE0s88uYm
3fpcptbUmwDZ6Ex6lc5sT6v3UT777LN1r9/bb79d8tE3pjOBXqH/6FWd9F8n
3VfTrP+S9qvNuZc9lOOZd+6b3/xmx+2cfDbj5MmTY5/KIOdf+UTT9tOAAK3R
m/SiTluz3fsna7q1NVu9jzKx6qqrpr5nueWWK/HIs9GaAMXQm/SqKv18s1Fv
nnTh3Tmeded++9vfpl6Ttddeu+57FltssdT3JP1aJadOeDhTa+pNgGx0Jr1K
Z7an1fsozznnnNTXf/nLX+57VmWV6EygV+g/elU7/ZdH99Vk6r+NT+ybg065
MYczzsdrr73W8T2Utbnoootin84gh515Z9P2S2bYVufHPlSArqE36UXttman
90/WdGtrtnMf5frrr5/6nn/9138t8ciz0ZoAxdCb9Kqq/HyzWW/udtQVOZxt
fi677LLUa/N//s//SX39iy++WPd6Js8QqpK9Trg5U2vqTYBsdCa9Sme2p9X7
KLfddtvU1y+//PIlH3lzOhPoFfqPXtVK/+XZfTXN9s/U+i+Zzfcel9uf26nR
o0fndh9l0oZVs/VBVzVtPw0I0Bq9SS9qtTXzun+ypltbs537KP/jP/4j9T2r
rLJKeQeekdYEKIbepFfF/vlm1t5cd5fRuf2ZeZgyZUr44he/mHqdnn/++UGv
P/LII1Nfu+iii/Z9rSrZ6DeXZGpNvQmQjc6kV+nM9rRyH+WTTz4ZvvrVr6a+
fu+9945w9I3pTKBX6D96VZb+K6L7aprtn+k/wzY7JcyeMzf3Y2jHz372s7o/
N0w+3yZt/uqv/ir1PfX2eMeSXOPh213QtP00IEBr9Ca9KGtr5n3/ZE23tmar
91Hedtttfb+X9p6tt9665KNvTGsCFEdv0qti/3wza28uPX/emzI99z+/E6uu
umrq9frhD3844DMUp06dGr75zW+mvnbdddeNeAaDvf/Rxwu1pt4E6JTOpFfp
zPZkuY8yac3HH3+8b5283rW9/fbbI57FYDoT6CX6j17VqP+K7L6aVvpvqR+f
GJ54/q3CjqUV9a7b8ccfX/c9Dz/8cN1r/cILL5R49I099eI7mdpvxS3H9A0A
2ehNelGz1izq/smabm3NrPdRzp07N0yYMKHhdT788MMjnUU6rQlQHL1Jr6rK
zzez9OZtD/6psONoR71nTNb241x11VXh8ssvD8sss0zd1yU9WiV3PPxq0706
wz5pTb0JkI3OpFfpzPbUu49y2WWXDeuss07fXp6//uu/bnh/6tJLLx37NAbR
mUAv0X/0qrT+K6P7aho9g7zWfrX+S+b8Kx4q/Jiaefrpp+s23b333lv3fcn1
TJ5Lmfa+UaNGlXgGjV14zVOZ2i+ZFbbSgABZ6U16Ub3WLPr+yZpubM1Evfso
k0l+1rj22muHpZZaKvzN3/xNw583fuUrXwmvv/567NMZQGsCFEdv0qti/3yz
ld4cMfqOwo+nFcne7i9/+csNm7LR/K//9b/CjBkzYp/GACMverDpXp1aa+pN
gGx0Jr1KZ7an3n2UWSfZS37dddfFPo1BdCbQS/Qfvap//5XZfTVZ9s/0n50O
vby0Y6tn5MiRqU2XfG73zJkzG7535ZVXTn3vxhtvXNLRN7fr0Tdmaj8NCNAa
vUkvWrg1y7p/sqYbWzPR6D7KVubggw+OfSqDaE2A4uhNelUlfr6ZsTc32uPC
0o4rq5NOOqnt3jz11FNjH/4gm+03qeleHb0J0BqdSa/Sme3p9D7K5JnpVaQz
gV6i/+hVSf/FWNOuaaX/kllhs1Fh2sezSj/O/tZbb73UpltuueWavnevvfZK
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
bwPwA53pHp2JMqEz3aIzAZhIM9OmAe2rNeCptxo131a11X/tAnySZR/NYX+6
W61ezbljWemf4bEXP5yq/2hAALbRmn6gNVEWtKZ7tCYAHyWZa9fXwLsed33Z
pTPo7n/GNGZjZ9Kb8FXa+fZv6U0ronqT+TaAotGZfqAzURZ0plt0JgATJv3X
tv1q6yAaMA/tGzCs+dauw1oX4JMss+2xD89xffmlMe6xBcy2AXiB1vQHrYky
yNKad0+lNW2hNQH4JslcW68tDrlSLf5gmevLLh39M+145PXGnUlvwleBvdk1
vjnpTXvCenMPzj8HUDA60w90JsqCznSPzgQQJ+lMWy8aMB+LP/j40waMbr51
6/raAnySdh/NwWeOVitXcu6YLfrcsSMumMpsG4BztKY/aE2UAa3pB1oTgG9M
59r13jzt0tGuL7m0/njFOOPOpDfhqzTzbXrTrrDeZL4NoGh0pj/oTJQBneke
nQkgTpL2a11X0IA5OqP3fbHNRwPCZ2ln20PGvej60ktnxKS5iftvLxoQgGW0
pl9oTUhHa/qD1gTgE/PevKK2xk19yfUll9aEabMTtSa9CR+ZnX/e2JxDxs10
fdml09SbUft2mG8DyAmd6Q86E2VAZ/qBzgQQJclMW0IDrly5Uq1YsSJwffLJ
J64vL1ZrA8Z3n15b63X4Da4vGWiQZh/NjscPV+8u+cj1pZfOux+uUPv8YWKi
/mO2DcA2ya0Z1pTS+rItWhPS0Zr+oDUB+MR0rq3XVl2uUss+9rvhXnnlFTV4
8GB1+eWXqzPOOEOdcsopqmfPnmrkyJHq/fffd315kT5q+dlue9QNRp1ZX4Bv
ks636c18tO9N5tsAXJDamfrvLE3+bnP1ajln3NGZKAM60w90JoAogf0XMtP2
rQGDbLbZZupf/uVfAtdnP/tZ9d5777m+xEhhDdi++2hA+CrNbPvsvg+5vuzS
Ov+mfzLbBuCU1NZ8/PHHQ5uy/frSl76kfvrTn6pdd91VXXjhhWrx4sWuLz8U
rQnpaE2/0JqAualTp6pDDz3U9WWUlslcu75OOH+E68sNNXbsWLXttttGtqf+
+81tttlGDRo0yPXlhjql11ijzqQ34auk8216Mz9tezOyOU9nvo3qojPzJbUz
//Vf/9X47za/8Y1vqI4dO6o//elPatasWa4vPRKdCenoTH/QmZCM/stXkv5r
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
zZs3r+Crj/bs7LfjW/PIAbUFhHHRm5rpfNu33izzfRUie5P5NoSjM/0mtTOT
fo5y8ODBoc8t3/br0Jmwgc5Mpsz3UqAz4QL95zeT/ttcr99c5V0D1j399NOB
z5mrr75aPfPMM6H/zmdhDbhNm/ajAREnbQNmacEks+3B976Q0yNHe8MfeI3Z
NkqL1vSb1NZMOn/685//HPj1v/71rwu+cjO0JmygNdO7/vrrA38m3/jGN5r+
2RFHHOH6cmPRmii7O+64I/QshaTrvffec/1wSsm0N+e94dfP//jjjw98nhx1
1FGBX7948eLQ2dVzzz1X8NVHm//WB0atSW8iiove1Jp6s2twc/rWm2W+r8Lw
iRG9yXwbgtGZ/pPamUk/Rylpvw6dCRvozGTKfC8FOhNFo//8F9t+n/afjw1Y
97e//S3wOaPfu1auXKm++MUvNv27/fbbz/VlR2rbgEHdRwPCRNYGTNOCSWbb
Dzzu15+9ymzyM28x20Yp0Zr+k9qaSeZPM2fODP27yT59+ji4+ni0JmygNdPr
3Llz08/hRz/6UeCZQN/61rdcX24sWhNlNW7cOLX55ptbea2rr0WLFrl+WKVk
2pvvffiR60ttcPjhhwc+T84+++zQ7/nwww/VO++807T034H65P2lHxu1Jr2J
KC56UzOdb/vWm2W+r0JkbzLfhkB0phxSOzPp5yg1/Tn6oO959tlnC7zyeHQm
bKAzkynzvRToTBRl/Pjx9J8Qcftn2i7fGrBu9913b3q+6DOB6/fn1OcAtf/3
G220kXd/v9iWbsDo9rt57QLC2GrAJC1oeh65Xs+9wut6UV547X1m2ygVWlMO
qa0ZNn9ab7311JgxY9SwYcNU79691WGHHRZ6JtA3v/nN2pzbR7QmbKA109F7
tL/+9a83PX79etK/f//An82MGTNcX3YkWhNloztg++23t/oaV1+vv/66lWt8
7bXXYtfkyZMD18SJE2uz++uuu0717du3ds8W3TV6n/Ill1xSu//WBRdcUDtv
u2vXruqYY46pnY+oP/P329/+Vh1yyCHq4IMPVgceeKA64IAD1DbbbKM6dOig
ttpqq9oM5Ve/+pXabLPN1CabbKJ++ctf1j6P8x//8R/q29/+du2z4bqR9Pm7
//Zv/1Z7Pfza176mvvCFL6gNN9xQbbDBBrWl/15PL91ZYfNc/e/33Xff2s/D
tDeXr/Dr7wL333//wMfWq1cv15eW2fIVq4xak95EFBe9qZnOt33rzTLfVyGy
N5lvQxA6k84sSprPUerZedD3TJkypcArj0dnwgY6M5ky30uBzkTeqtJ//fr1
i+y/v/zlL5H9d9BBB0X236abbppr/+mvC+q/oP0zPjegtnz58sDzJvXPtO6M
M84I/Dno84R9FdyANwcuIIztBjRpwSSz7flv+XVud5ktXLSM2TZKgdakNYsS
Nn8yXV/+8pfV008/7fphhKI1YQOtmY5+bQh63Po1/5lnngn9dz6jNZG3LH1V
XzfffHPs0nOBn/zkJ7m8ttXXD3/4Q/XVr361tjbeeOPa+spXvlJrB73CZpes
4LXbbrvVniNxc+36Wr26+X5jLu20004iX/dN6J+1SWvSm4jiojc10/m2b71Z
5vsqRPYm821kQGeywpb0zkzzOUr9d8NB3zN69OgCrzwenQkb6MxkynwvBTqz
eug/VthK2n+/6ny1dw2o6edo0OM79dRT137NiBEjAr/mwgsvdHjl0dY1YHj7
6dXx6IGuLxUey6sB6yuoBZPMtvVZWCjGB8tWMNtGLmhNVtiS3ppZPkepH/vb
b7/t+iFEojVhA62Zjv5sfNDj1Y9V/z1i0D7B/fbbz/VlR6I1y0nv22j/XDz6
6KMb1g477BC7vve970Uu183Ckr123HHH2vNVt6a03tT0Xqegx3Xttde6vrTM
WnszvjXpTURx0Zua6Xz7gw/96s0y31dhydJPmG+XCJ3JkrCkd2aaz1H+4Ac/
CPyeW265pcArj0dnwgY6M5ky30uBziwG/ceSsNr2X1T7bf6bq2v952MDauec
c07g4xs8ePDar5k/f37g1+jzrHwV1YD19qsv188lFqttCyaZbft07ljZLf9k
FbPtEqE1WRKW9NbMeh7lf/7nf9Y+J+wrWpMlaZWtNXffffemx6jP+V2xYkXt
3+v7KLb/9/qz/L7t1W6L1iwn17/7LJbJ2nbbbWvPV9Pe9O294Re/+EXg4+rf
v7/rS8us9fzz+NakN1k+rPZzbtP5tm+vKWW+r4J+TWG+XR6uf+dZLJMlvTPT
fI7ypz/9aeD33HTTTQVeeTw6kyVplaUzy3wvBTqzGK5/F1ksk2XSf/X287UB
ta233jrw8c2ePbvh6/S9Ktt/jZ5VLV261NGVR2vfgEHtRwOyfFu6BZPMtlet
Xu36V60yVq1ew2y7RFz/rrNYJkt6a2adP+mlz/cYPny464cSiNZkSVxlaM3l
y5cHnje51VZbrf2aM844I/DxP/LIIw6vPBqtWU6uf+dZ+S19Lpm+x6tulQ02
2EB94QtfqL026Vmr/ty2PpNdn9H+ta99TX3nO9+p7bHSZ9P8+Mc/Vv/1X/+l
fv7zn9c+//fLX/5SbbbZZrU9WjvvvHPtTG79Wr3PPvvUzqo48MAD1cEHH6xO
PPHE2n1jevToUXuN69mzZ21ftN4fpu8Vo8+v0Gfc3Hbbber2229XI0eOrJ2b
dt9999XmvHpvij7nfuHChbUzv9999121ZMkS9fHH687nMO1N38702HLLLQP/
N+rXr5/rS8tMnwtt0pr0JsunVZ9zm863fevNMt9XIbI3mW+L4/p3nZXfojP9
keZzlPp/h6Dv0T8/n9CZLIlLemeW+V4KdGYxXP8OsvJbWfvvZz/7Wab+O+us
syL7784774zsv8WLFxv239VN/bf5wf414Pvvv68++9nPNv3vpH/+7XXq1Cnw
f9N7773XwZXH0w0Y134dj7mltlz/XrBY9bXHHnuIn22XFbPtcnH9u87Kb9Ga
/rRm1P3QXnzxxdrSf++h74u26667hv5vqu+J5uO+HVqTJXGVoTX162bQY9Ov
xXUjRowI/Br9uuwrWrOcXP/Ot11x56jrFXcWe/vz2+vrqKOOUtttt13tDK4i
Hovea3L44YfX/nu7du2qjj/+eHXKKaes7bGzzz5bXXnlleqaa66pnUmoz34Z
NGiQGjp0qLrjjjvU6NGja3+XVW8x3SzTp0+vnR/2/PPPq5deeknNmTNHzZs3
T73xxhvqnXfeqf392bJly9Qnn3zi+mmVG9PenPfGe64vtUHYmR59+vRxfWmZ
zX/rA6PWpDdZPi3dm48++qjY+XaZ76vAfLtcXP+ut110Jp0ZR2pnpvkcZdg9
qvTfCfuEzmRJXNI7s8z3UqAzi+H6d7DtKlv/HXbYYZH917t378j+u+eeeyL7
75VXXql8/wW13xYH96kt3xrwrrvuCnyu/OQnP1HTpk1rWJ07dw782j/84Q+u
H0ag0AZs0340IMuXVW8/rQz3Wiwj7rVYLq5/59suWpPWjCO1NcPmT/pzrkF0
U4Y9t/Tzxje0JkvSKlNr6s+qBz3GwYMHr/2a+fPnB37N9ttv7/DKo9Ga5aT3
VbR/Ht58880NSzdP3NJ7LqKWT3TTbb755rm+prW9nxfsMe3NZ2e96fpSG+g9
TkHPk8svvzz0e/SfO/SfRdqvF154ocArj/f87LeNWpPeZPmw2vamJvV+i2W+
rwL3WywXOjOfRWfmQ2pnpvkcpd6/H/Q9vp1JRGeyJK2ydGaZ76VAZxaD/stn
0X/5iNs/U+8/HxtQf7Yh6/Nq0003df0wAjU0YEj71RcQZurUqYW2n5Zktq3P
wkIxPli2gtl2idCatKYkUlsz6eco9b169TmhQd+jP5/rG1oTNtCayW299daB
j3X27NkNX/etb32r6WvWX399L8+31WjN8mr/PKyKcePG1fb75PHapl87YZ9p
b06Y9rLrS22gz4wKep6ce+65od+jz54P+p4bbrihwCuP98D014xac9ujB7m+
VHjMRW9qpvNtn+6poJX5vgpLln7CfLtk6Ew6UwqpnZn0c5Rr1qwJvAekXk8+
+WTBVx+NzoQNdGYyZb6XAp1ZnCr3nz4jgf6TI27/TH1tfoh/DajvXZn1eaX/
DmHRokWuH0qTWgPGtF99AWHyasCw9tOSzLbnv7Wk4J9IdS1ctIzZdsnQmrSm
FFJbM+nnKLUdd9wx8Hs6dOhQ4JWboTVhA62ZjD6DOGgmoT+D3V6nTp0Cfza+
nQFRR2uWV1Wbs+6RRx5R++yzj9XXuEmTJrl+WKVk2psD73rC9aU2OOGEEwKf
JyeddFLo9/z4xz8O/J5Ro0YVeOXxbh37vFFr0puI4qI3NdP5tm+9Web7KkT2
JvNtkehMOlMKqZ2Z9HOUs2bNCn1uvf322wVffTQ6EzbQmcmU+V4KdGZx6D/6
T4q4/tPtV18D73rK9eWutXDhQmvPLX0/Tt8ENWD79qMBEcd2A8a1n5Zktv3c
K/59hrmsXnjtfWbbJUNr0ppSSG3NNJ+jPOCAAwK/50c/+lGBV26G1oQNtGYy
d911V+Dj/slPfqKmTZvWsDp37hz4tXrW7SNas7yq3px1zz77rOrSpUvo+SxJ
1vjx410/nFIy7c3zr5vo+lIbnHXWWYHPk7333jv0e774xS8Gfo/uV59cfOPD
Rq1JbyKKi97UTOfbvvVmme+rENmbzLdFojNb0Zn+k9qZST9Hqe9xFfT1G264
Ye2sSp/QmbCBzkymzPdSoDOLQ/+1ov/8Z9R/na+pLZ8a8JZbbrH2vtatWzfX
D6dJvQGj2k+vjsfe6vpS4TFbDajbz/R+t9seO9h4tv3A4/Ny/gmgbvIzbzHb
LhlasxWt6T+prZnmc5T//d//Hfg9+n5NvqE1YQOtmcwpp5yS+We16aabun4Y
gWjN8qI5G82ePVt17dpVrb/++ql/j8eOHev6YZSSaW8e0XO460ttEPYZ++9/
//uBXz9nzpzQ55Y+Q8gnx54/1qg16U1EcdGbmul827feLPN9FSJ7k/m2SHRm
IzrTX1I7M+nnKPWsPOjrt9lmm4KvPB6dCRvozGTKfC8FOrM49F8j+s9fcftn
6v3nWwMeeeSRgc+Tz33uc7V92UFrgw02SPR3ky797vx7YtuPBkScrA2YtP20
JLPtwff6dW53mQ1/4DVm2yVDazaiNf0ltTWTzp+mTJlS+3dB3/O73/2u4KuP
R2vCBlozmZ/97GeZ/252vfXWU4sW+bUfXaM1y4vmDKbvkdKjR4/QcwGjlm/z
grIw7c2Oh1+nVq5a7fpy11qyZIn6/Oc/H/hc0X/Gae/SSy8N/ftQ/Z/lC/0z
3um424xak95EFBe9qZmege5bb5b5vgrDJ0b0JvNtkejMYHSmf6R2ZpLPUc6Y
MUNttNFGgV/fs2dPB1cfjs6ELXRmMmW+lwKdWRz6L5juv+7du9N/HonbP+Nr
A377298OfJ5cddVVod/z9NNPhz6/XnnllQKvPlpQAwa1Hw2IOGkbMG37aUlm
270GpPvvQHKXD32B2XbJ0JrBaE3/SG1N0/nT6tWr1YgRI0LbVK9evXo5ehTB
aE3YQmua0+9PWf5utu0aOnSo64fThNYsL5oz2jvvvFO7h9VXvvIV499h3Q2w
z7Q3t2xZz89+y/XlNgg7C+7AAw9suIfi0qVLQz+Tv99++zl8BM1emPNOu9ak
N5GOi97UTOfbPvWmVub7Kuje3IP5dqnQmdHoTH9I7UyTz1Hq1nzuuedq5w2F
Pa8eeughh4+iGZ0JW+jMZMp8LwU6szj0XzT6zx9J+m+LLn404MyZM0OfJ1Hv
WytXrgz9XEX//v0LfATR6g0Y137bHTO4toAwSRtwzz33zNR+WpLZdte/jrP0
SBHn5Cumx/YfDSgLrRmN1vSHxNbUwuZPeu2zzz61fZZbbLGF+upXvxr5vPrS
l76kXn/9ddcPpwGtCVtoTXO33HJLqr+bDVr6Xlu+oTXLi+Y0o88B1OcEfvOb
34z9HR4yZIjryy2lJL15691Pub7cBmFnTOqlzzW/55571OjRo9VWW20l5s8y
Q+57IXavTsdPW5PeRBQXvamZzre7XehPb2plvq+C7k3m2+VCZ5qhM92T2plh
n6Pceuuta3+3qffyfPnLX458Tm255ZauH0YTOhO20JnJlPVeChqdWRz6zwz9
517UGeT19qv3ny8N2KdPn8DniL5v94oVKyK/d/vttw/83s6dOxd09fF0A5q0
n156jgiEMW1AW+2nJZlt73LCcLVypR/njpWZPnds3zMmMdsuGVrTDK3pnsTW
1KI+R5lkXXDBBa4fShNaE7bQmuaOPPLI0L871Hv9gpb+823Q94Tt83aF1iw3
mjOZjz/+WPXt21d973vfC31N1J+rhn1JevOki0a7vtwG+h45G264Yere3Hjj
jdXy5ctdP4wG3f8+MXavTr016U1EcdGbmul8e5fj/elNraz3Vaj3psl8e096
Uww6Mxk60x2pnRn2OUrTpd87xo8f7/phNKEzYQudmVwZ76VAZxaL/kuG/nPH
ZP9M2+VDA+6///6Bz5EOHTrEfu+ZZ54Z+L1f+9rXan9/4IOgBgxqPxoQceIa
0Hb7aUlm29t3HVo7Ewv5mjn3PbVHj/uZbZcMrZkMremOxNbUbHyOsmPHjmrZ
smWuH0oTWhO20JrmwmbUV111Vej3PP3006E/W/2ZG1/QmuVGc6aj74ei2/Ln
P/9508/wxhtvdH15pZSkN7c9op9a9vEnri+5gf6zStrm7Nevn+vLb/DR8pVq
x+Nui92rQ2/ChIve1JI0py+9qZX1vgr13jRtTshAZ6ZDZxZPamdm/RylPpvA
N3QmbKIzkyvjvRTozGLRf+no/hs4cCD9V6Ak/VdrwMP7O23AVatWqY022ijw
dbdHjx6x3z9y5MjQ1+2nnnJ//lFDA8a0X/29FQgT1oB5tZ9m1n/rGnDIuJm5
XAfWGTFpLrPtEqI106E1iyetNeuyfI7yC1/4gurdu7c3e3TaojVhE61pZubM
maGvF1E/J/2epc+lDPq+/v37F/gIotGa5UZzZnfnnXeqzTfffO3P0LfPvJVF
kt7c4pC+avwjL7u+5CYXX3yx+uxnP2vcnPqMIB/PPr//sdeM9uq0fS8Hwrjo
TS3JfNuH3qwr630V6r3JfLtc6Mzs6MxiSO3MtJ+j1J+1HzRokOvLD0RnwiY6
M7ky3kuBziwW/Zcd/VeMuDPI2/ef6wbUr89hr73Dhg2L/X69jzLs+wcMGFDA
I4imG9C0/WhAxGnfgHm3n5Z0tt3jikm5Xg+U6nndk8y2S4jWzI7WLIa01qx7
4oknjP/8rz/n9N3vflf9+te/Vn/5y1+8OieuPVoTNtGaZvr06RP42qHv271i
xYrI791+++0Dv7dz584FXX08WrPcaE579D3xdthhh9prAuxL2ptnXH6v60sO
9Mgjj9Tuc/a5z30utD3XX399tddee6lHH33U9eUG6nnNg/QmrHHRm1qS+bYP
vVlX1vsq1HuT+Xa50Jn20Jn5ktqZYffFaLvWW2+92v0a9f13DzjgAHXTTTep
xYsXu770UHQmbKIz0ynTvRQ0OrNY9J899F++TPfPrF2H+tOAZfSna6YYt1/t
fbUrDYhw9QYsqv20pLPtnU8Y7sW5Y2Wlzx3b7w8TmW2XEK1pD62ZL1rTL7Qm
bKI1zey///6Bf3fYoUOH2O8988wzA79Xzzl8OPNWt+Y+tGap0Zz2+fbZlLJI
2pvbHNFPLf7A3/8t3n//fTVt2rTafTuvueaa2tL7xydNmlT7d756d8lHaqdu
Q5p6M6w16+/jQBgXvaklmW/70Jt1ZbyvQtveZL5dLnSmfXRmPsrWmVLRmbCN
zkyvLPdSoDOLR//ZR//lI2n/6bUtDZiLWgP+7xDj9qsvIMzcuXMLbT8t6Wx7
+65D1cTpcwu9xiqZ/NSb8f13GrNtiWhN+2jNfNCa/qA1YRutGW/VqlVqo402
Cvw7xB49esR+/8iRI0P/DvKpp54q4BFEozXL73vf+17D8+61115zfUlAoKS9
uWXLuvXup11fduno+84lmWvTm4jjoje1pM3py99tlvG+Cm17k/l2udCZkILO
9AOdCdvozGzKcC8FOrN49B+kSNx/Xa6tLRrQvnoDmrYfDQgfBfZf1/C9NHq2
fXbfh1xfdmmdf9M/mW2XFK0JKWhNf9CaKANprann0WF/l6jPFYvz+uuvh37/
gAEDCngE0WjN8qM5IUWa3tzvlEFq5Sq/zl2TTP8sf3PGqNizzulNSJB0vs3f
beanbW+aNidkoDMhBZ3pHp2JMilbZ0q9l4JGZxaP/oMUpv23ZZv+owHta23A
uxK1Hw0IH6WZbe94/PDaGVmw690PV5idR85sWyRaE1LQmn6gNVEWtKY/aM1q
oDkhRZre1Gv05BddX3pp3D31lUR7ddq+ZwO+STrfpjfz0b43mW+XC50JKehM
9+hMlAmd6Qc60w36D1KYnkHevv9oQLuCGjB6pj107QJ8ErYfLGq2rdeQcbye
2DZi0tyG/tuD2Xap0JqQgtb0A62JsqA1/UFrVgPNCSnS9uZBpw1Rq9escX35
4umf4aFnj0k816Y34as0e3f0+f+wq6k3DZsTMtCZkILOdIvORNnQmX6gM92g
/yCF6RnkTevQ62hAS9o3oOlMuz4TBHySdrZ98Jmj1cqVnDtmiz537IgLpjY1
YFz/0YBy0JqQgtZ0j9ZEmdCafqA1q4PmhBRpZtu6N/UaP22268sXb+L0uanm
2vQmfJVmvk1v2hXWm8y3y4POhBR0plt0JsqGznSPznSH/oMUaefaNKA99QZM
2n40IHyk+8/sTPLm5/PdU+e4vvzSGPfYgub+Y7ZdKrQmpKA13aM1USa0ph9o
zeqgOSFFlt7s1P02teKTVa4fglj6Z3fIWXdl6M1hrh8C0CTt3h16056w3jRp
TshAZ0IKOtMdOhNlRGe6R2e6Q/9BiqD+C90/06VfQ//RgNnVGrDnXalm2rr/
aED4Jsts+7A/3a1Wr+bcsaz0z/DYix9mtl1ytCakoDXdojVRNrSme7RmtdCc
kCJLb27Vsq6//XHXD0GsG0c9m3quTW/CV2nn27+lN62I6k3m2+VBZ0IKOtMd
OhNlRGe6RWe6Rf9BCuP+a9d+9f7b6tD+NGAGN456LnX70YDwkflse0jg81uf
mYVsJj/1ZvL+owHFoTUhBa3pFq2JsqE13aM1q4XmhBRZZtu6N7c96gY1/833
XT8McRa8tUTtfPwwehOlk2XvDr2ZXWtvTmC+XXJ0JqSgM92gM1FWdKZbdKZb
9B+kaDiDPNFcu//atd3RNGAawQ1o3n40IHyUdLbd+Fwfprr0vFst59yx1PS5
Y8f8dSqz7QqgNSEFrekOrYkyojXdojWrh+aEFFl7c6vD+qtTLhnr+mGIc3rv
SZnm2nrt0I3ehH+yzLfpzWzW9mb3FPPt0+hNSehMSEFnukFnoqzoTHfoTPfo
P0hho/9aG/Ae1w9FnMYGTD7T3qHb8NoCfJJ1tq2XPjsL6Qy8d/an/RfcgMy2
y4PWhBS0pju0JsqI1nSL1qwemhNS2OjNrQ67Xg2591nXD0WM4RNeyjzXpjfh
q6zNSW+mt7Y3mW+XHp0JKejM4tGZKDM60x060z36D1JsEXoGeXP/bRXRfzRg
MusaMKz9ovpveMMCfBLaf11N9tK0Psd3Of52Nf+tJa4fijgLFy1V+55+f+Rs
mzPJy4PWhBS0phu0JsqK1nSH1qwmmhNSmM6243qz4xH/UDNeedv1w/Hei6/9
n9rpuGGZ59r0JnyVdb5Nb6bT0JtRzcl8uxToTEhBZxZr5qt0JsqNznSDzvQD
/QcpbM216w34wpxFrh+S99Y1YLaZNg0IH4X1n9mZ5Oue76f3nuz6oYhzdr8n
4vuP2XZp0JqQwnZr8veN8dbNtWlNlA+t6Q6tWU00J6Sw1Zt6HdB9iPpg2XLX
D8lbHy5boTqfdVfi/TpBc216E76ysXeH3kxO9+buPSZkbk7IQGdCCjqzOHQm
qoDOdIPO9AP9Byma+69fdP8dFt5/enXqMZQGjNDagGMS7p8Jbr8dut1eW4BP
ss22G38P9FlaMHPng3Ot9B8NKAetCSlozWLRmig7WtMNWrO6aE5IYWu2rdfW
h9+gevz9PrVq1WrXD8s7q1avUX+86kFr+3XoTfjK1t4detNca2+OZ75dIXQm
pKAzi0FnoirozOLRmf6g/yCFzbm27j8aMFxrA06xMNNe1387HkcDwi/1/jM7
kzx6tr3j8cNr57ci2ovz3ld7nTahsf+6p+g/GlAUWhNS0JrFoTVRBbRm8WbO
fY/WrDCaE1LY7k29Luz/oFqzxvUj84f+WVx802NW9+vQm/CVrb079KaZdX+3
Od5Kc0IGOhNS0Jn5ozNRJXRmsdb9vSad6QP6D1KE7Z/ZMnT/THP/bd2u/2jA
ZvUGzHr+eNv2qy/AJ8lm29F7afQ6pOfdnDsWYclHn6ijLpiytv9M9tIw2y4H
WhNS0JrFoDVRFbRmsWhN0JyQwvZsu76uGTLd9UPzRr8Rz1jfr0Nvwlc29+4c
ctYYejOCvqfCut4Mak7m22VFZ0IKOjN/dCaqhM4sDp3pH/oPUiSbawe0X0j/
bX34P2jANnQD2phpt++/HY8b4fqhAQ22O8bubFv/Xpx59RS1knPHmuiz2M65
/qmI/uNM8jKjNSEFrVkMWhNVQWsWh9aERnNCiuDZdvo9O/Xe1OuWMf90/fCc
G3zvTKPZdtL9OvQmfGV77w69GazWm/3b9qad5oQMdCakoDPzRWeiaujMYtCZ
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
2OaM/h077Nz75PWm4+aEDHQmpKAz6UzAJjrTDJ1ZTvQfpLA21w7ov6xz7bb9
t64B7y+oAYdn7L8kZ5An3z+zEw0IT+n+69iu/+ydSW7y56zge5ce0vMeNWz8
rNqZX67paxg+8RV12HkT1a6njA3uv1Mt9x9nkpcOrQkpaM1WtCZgB60Zj9aE
TTQnpJAw266vbY8etHbtdNxtquv596heNz2iBt8zQz3w+Fz13CuL1IK3lqj3
l36slq9YVTt/Qy/9f7+/dHnt3+mveeDxeWrwvS+oXgOmqW5/Had2OWF44Pse
vQkkFzTfNmvO9Ht34prT6970rDkhA50JKehMOhOwic6MRmeWG/0HKfLqP9tz
7fb9t7YBL7g3pAGXGzXgJQMeC2hA0/ZLcgZ5c/sl7r927UcDwke12bbJmeSp
ZtvJ99K0/z3b9cQ71TnXTWt5DZhf+H0OJj25UJ13wxNqT9149fYL6T/OJEcc
WhNS0Jq0JmATrRmM1kReaE5IIXG2XV/197aG9en7XNxsLe49L/6+bwXPtulN
CJHv3h2T5gz/XXPfm4/XenOXtr3pWXNCBjoTUtCZdCZgE53ZjM6sDvoPUkid
a4f133YB/RfYfl1N33/yO4M8y/6Z2jphVG0BPjGebQf+Dto/kzzsz1r692q3
k0ap0696SA2bMEvNePX/7J879tpiNfz+V9Qf+zyq9urR0n0n39264vqPM8lh
gNaEFLQmrQnYRGu2ojVRFJoTUpj2ZujZ5yWcbee9ZyfL/RXpTfjObnOa/Hkv
XXMW05uzW3vz92160/PmhAx0JqSgM+lMwCY6k86sMvoPUpRpD43xXDuw/Yqc
a2ffP1PvPxoQvgnrP9dnksf+vrX8Xu1+8l3qhF4PqMtueVINGT+rtvfl+TmL
1YK3P1x77tiq1Wtqa+25Yy3/Tn/N5JavHTL+ZXXprc+oEy97sKX5xqpdThrT
utq2X1D/cSY5UqA1IQWtSWsCNtGatCaKRXNCijLPtsXv2aE3IZDpfNt2c6bZ
u9N2NfTmON2bCxL35mWDnlYntO9NYc0JGehMSEFn0pmATXQmnVll9B+kKNtc
O93+maz9V+wZ5G37jwaEb9r/mcyHM8mD9q4Z/c61+12rrRPvUju3XSeNDlhj
YvuPM8mRFa0JKWhNWhOwidakNVEsmhNSMNuWu2eH3oSPsu3dMWnOnPbutKy4
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
8FlB8TPuxuaEDHQmpKAz6UzAJjqTzqwy+g9S5Nl/7KHJf66t3ycAn+R3Hlhx
e2mMfsdT/36zlwZ20JqQgtakNQGbaE1aE8WiOSFFQ2/mfPZ50HtPfdaV19nn
O3QLn3lZOT/E4Wyb+TZ8RHPKbk7IQGdCCjqTzgRsojPpzCqj/yCF6/5jD022
uTazbfjG5DMt9s4EM//zXiHnBKX9Hbe1l8bSOUGQgdaEFLQmrQnYRGvSmigW
zQkpfDv7PP/Ztt2zQ1zOtulN+KjSzeniHHTLZwVBBjoTUtCZdCZgE51JZ1YZ
/Qcpiuq/jseGn0vMHpp0c+36+wLgk7Sfa0lyLpjtvTT6nqqpft/ZSwOHaE1I
QWvSmoBNtCatiWLRnJAi89nnFmfb6Wdcds8+T/3+U/Bsm96Ej2jOApuzPuO2
2JyQgc6EFHQmnQnYRGfSmVVG/0EKn/rPzR4a2XNtGhC+sXk+mMi9NK7PCWIv
TWXQmpCC1qQ1AZtoTVoTxaI5IUWm3gxsTouz7Yj5VtR7ju3Zdlhzup5t05vw
ka35ttjmFHtWUGt3QgY6E1LQmXQmYBOdSWdWGf0HKWz3H3toip1r04DwjfGf
Aw3OCGMvjZtzgiADrQkpaE1aE7CJ1qQ1USyaE1LIP/vcbm/mvm8nsDcNZ13s
24EAxn/2NGnO1Hv3ytOcxjNuS80JGehMSEFn0pmATXQmnVll9B+kCO6/tHto
7J0N4qr/jPbQeDTX1q/9gE+yvBaYvQ7E76VzvpdG7DlBNKAktCakoDVpTcAm
WpPWRLFoTkhRjbPP499rJJ59znwbPiqqOfN4HRBxVlDI/h1bzQkZ6ExIQWfS
mYBNdCadWWX0H6QovP+s7qFJ+/n5bHtoXLVf2IwL8Ema1wPb91tkLw17aaqA
1oQUtCatCdhEa9KaKBbNCSl8O/t8t5OGqzP7PKjOalpTauuMqx4MfZ/Z77SR
quc1DwWsqbV1zAUTYmfbu500UnU64+5P11i1x8l3eTvbpjfhI5pTUnM2dydk
oDMhBZ1JZwI20Zl0ZpXRf5Ci/P3X2n49+zruv5D2M/0cfdTrP+CTrGeG2dtL
k/ZzLuylgQy0JqSgNWlNwCZak9ZEsWhOSJHffRbTnX1+4Y3TYq95n+53Bs6z
/j7o8cjvW/7JKrXLidHnA42eMqfhexa9u6zlvWKkl7NtehM+ojmT/9nTVnPa
2L8DGehMSEFn0pmATXQmnVll9B+kqF7/3eFv/6WYa9OA8E3Sz7yYvC5Ufi9N
knsuspemMmhNSEFr0pqATbQmrYli0ZyQwrezzy8b+GjsNf/hygcD31vGPPRK
7PfuduKdoe8ve5w8Sr2/dHnT9+xx6igvZ9v0JnxU2eYMek1w0ZwZ9+9ABjoT
UtCZdCZgE51JZ1YZ/Qcp6D9h/Rfwmg/4xMbnXthLw14axKM1IQWtSWsCNtGa
tCaKRXNCCl/OPq+/p5g05z9GPtvufaX1veXl+e/Gfm9zc7a+n+za8s+nz3gz
8Ht0c3rRm+zbgQA0p4XmDLnvYmxzWti/AxnoTEhBZ9KZgE10Jp1ZZfQfpHDV
f2Gv7+n6b3iq/ms7147sv1Pu8rb/aED4Js1rBHtp2EuD5GhNSEFr0pqATbQm
rYli0ZyQwpezz3/d1bw5pzy1oOk9ZdcTR6iVq1bHfm/b5tz3tNHq2AsmqH4j
nlUL3/4w9HuMmpPeBGriXyNozqDXhVT7d3JoTshAZ0IKOpPOBGyiM+nMKqP/
IIU3/ffp63nS/qvvoSm0/zyaa+vXesAntl4n2EvDXhpEozUhBa1JawI20Zq0
JopFc0IKX84+T9Kcby1e1vR+ckKv+40eb705Z89/z/hnZK856U2Un3/NGdSd
lpqzZRXdnMYzboPmDJpxQwY6E1LQmfHoTMAcnUlnVhn9Bynov3ix/edwrq1f
2wGfmPWfjL007Rsw3700/txzETLQmpCC1oxHawLmaE1aE8WiOSFF2rPPOx5j
9+zzJM2pHXDaqIb3jyuHPGn0fbo59XvJnIXvG/+MGprT5r6dkPcT0/kV8234
iOaU3ZyQgc6EFHRmPDoTMEdn0plVRv9BCl/usViq/itqrs1sGx6yeZ4Ye2ky
7qVJeS45ZKA1IQWtGY/WBMzRmrQmikVzQgrnZ593TdecZ149peH9475HXjX6
vtbmvCNdc+Z99nnC2Ta9CR8V+XkY0c1p8ywxi80JGehMSEFnxqMzAXN0Jp1Z
ZfQfpHDef+1ey3Pvv5M96T9Lc20aEL4xf83wfy+N1XsuunqtSHHPRchAa0IK
WjMerQmYozVpTRSL5oQUPu3bSdKcN971fMN7x6uvmzXkbieNrL1nTHhsnvHP
KLQ5XZx93u78D8A3fjRn0IzbcXNa3r9jszl3pTfFoTMhBZ0Zj84EzNGZdGaV
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
MnsOWQmbRf3xj39Uu+66q9pkk03Uv//7v4f++Xvqqafm+rwPv+Qprfk2vYkw
NnrT4zVnQ3eG7OFxuTeLck+Fmye/qjY78Kbg5mzqTshAZyIuOrMqi89Rnn/+
+YF/Tuy///7qzjvvVOPHj1e/+93vAh933XXXGbzKcHQmTKAzzZN4LwU6M1/0
H+KKeq/OqgPjzLb7nS3vZ41SeQ3IbBtpJW3ANO87tf7TbcBX3vwgo6tHzatv
zV/TgOEdSAPKQmsiLlozndmzZ2v/+XnDDTfYfrqRaE2YQGvCQ2sWG82JuGw1
p+58+7yR+d0D0pSgWdQ//dM/NTxu5cqV6vLLLw88e65nz565Pu+Lb5nBfBup
2ehNT5zmdLk3i3JPhVpv1lZUd0IGOhNx0ZlVWXyOcsstt/T9mltvvXXD4xYv
Xqx+8Ytf+D62R48eaS9NG50JE+hM8yTeS4HOzBf9h7h036tNd2Cc2bbEnzVK
5TWgTv/RgAiTtgGTvO9ssMdQ7Qbsvu8Vqq2tPeNXAd7Zbr/vN7qpA2lA6WhN
xEVrpnPVVVf5vl7f+973Wv7afvvtZ/vpRqI1YQKtCQ+tWWw0J+Ky1Zy68+3R
k2cY+z3jaGtrq7w2o0ePrpz3c8IJJ6izzjpLXXrppWry5Mnqk08+Cfy1up+j
rDnooIN8H//jH/84q8vzNW7qnODeZL4NTTZ60xPYnE3d6XpvFuaeCj69Gdad
kIHORFx0ZlXU5yi9vTVPPPGEuvDCC9XAgQPVvffeqxYsWBD49RYtWqS+/OUv
+37N5557ruXx55xzju9jvc8+5YXOhAl0pnkS76VAZ+aL/kNccd+rTXVgnNm2
rZ81ltG4B0IakNk2NJlqwDjvO+vvOVS7Afc7aVxOrwT+fMYk3wb060DIQGsi
LloznT333LPlNfrJT37iO6f+/ve/b/vpRqI1YQKtiRpas7hoTsRlqzlberOv
f3M+8PQ7Bq5S39KlSyuflfzhD38Y+jp4c+fjjz9eLVy4sOVrxP0c5ahRo3wf
v/baa2d9uQ2mv/Ah822kZqM3PV5zhnangN4s2j0V+pxxV2BvNncnZKAzERed
WRX2Ocr7779fffOb3/Ttxj59+qj29tbPZE2YMMH3633jG99Qq1evbnn8Y489
Fviae5/JzAOdCRPoTPOk3kuBzswP/Ye4kr5Xp+3AOLPtvH/WWGahDchsG5pM
N6DO+06t/3Qa8Mwrpub8ipTXOdc+orr3uVGrAyEDrYm4aM3kvJ8Z+u2R3Gef
fdSIESN8X7dXX33V9tMORWvCBFoTNbRmcdGciMtWc+rOt19+a77Bq422++67
x3od/uM//kO9//77DV8j7ucob731Vt/H//d//3cel9xpxpwFzLeRmo3e9Gg1
Z8dyuTeLdk+FWm/WVlhzQgY6E3HRmVVBn6P8wQ9+oL72ta+Fvha9e/eunJNe
78QTT/R9bLdu3Xx//1mzZgV+/Xfeyednu3QmTKAzW6W5j4JH6r0U6Mz80H+I
K+17ddIO1D2P3MbPGssstAGZbUNTVg0Y9r5T339RDXj9Hc9YemXKZ9SkVxoa
MKwDIQOtibhozeSef/5539dk6NCh6oUXXgj8ey6jNWECrYkaWrO4aE7E5Upz
Bs23532Yzxk5Hm/ulOQ16NevX8PXiTuLOv30030fv/nmm+dx2Z3em7+E+TZS
s9GbnqjmrHWny71ZtHsq+PVmUHdCBjoTcdGZVUGfo9Rd3n256/Xv39/3cQcc
cIDv7//pp58G3gf85ZdfzuMloDNhBJ3ZxcR9FDxS76VAZ+aH/kNcpt6r43Zg
nNl2nj9rLLvQBmyabWf5ZzyLpbPq33c22H2IdgPe9/iblv9NK4+pT80JbMDm
DoQMtCbiojWTu/DCC31fC+918PZofv3rX2/5e7vssovtpx2K1mRJWrSm+2jN
4qI5EZcrzRk03174xbIMr77Rd77zHd9rW2uttdT666+vvv3tbwf+/fnzu/YX
xZlFzZw5U/3Lv/yL7+OHDRuW27V7Fi1eqT3ftt0aLFbze47XnBvsPjSyO13t
zSLeU2HqU2+r7gfeENqcte6EDHQm4qIzq9J+jtI7/7z+TMp9993X93Enn3xy
4HP44osv1Mcff9yyms+6zAqdyZK0JHSmifsoeKTeS4HOzA/9h7hMf+ZdtwPj
zLYXLM7vZ41lt3DJCmbbLHHLe9+p9p9eA770xj9s/6tWGi/N+qjagBodCBlo
TcRFaya3/fbbt1y/t/dyxYoVlb/vne3T/Pe/9a1v5fazwyRoTZbERWu6i9Ys
LpoTcbnSnEHz7eUr8umzOXPmBF7Pu+++W3mM91lJ7ww4v8fVX3PQLOpLX/qS
uvPOO9XYsWPV4MGDK5+PCjobyJtzefPuPC1f0c58myVu1d5zupozfA+Pq71Z
xHsqNPRmRHdCBjoTcdGZVWGfo/zmN79Z2Q/ufTbJ2+Md9LjHHnus8+v17NnT
9zHnnXdeLteTBJ3Jkrhc7UxT91HwSL2XAp2ZH/oPcWV1dnBUB8aZbefVgOho
wJUhDchsm+Xo2mGHHRr6L6oB3/nH57b/VSuNeR8sbG3AgA6EDLQm4qI1k1m+
fLnveZMbbbRR52P+9re/+b429T+TdA2tyZK4aE130ZrFRXMiLleaM2i+3b5q
VS6vw+233+57HXfddVfD4/7yl7/4Pm78+PGdjwmaRemuf/3Xf618pipv7atW
M99miVtebz7xxBMtzRm0h8fV3iziPRUCe9OnOyEDnYm46MyqsM9RDh8+vPNx
3n16f/rTn/o+rv4zkltvvbXvY1z+fD2dyZK4XO1MU/dR8Ei9lwKdmR/6D3Fl
1X+1FdSBcWbbeTUgIhqQ2TbLsVVrP09r/wU34OdfLLX8b1p5ePeUCG3Aug6E
DLQm4qI1k5k+fbrv9f71r3/tfIw35/Z7zMCBAy0+83C0JkvSojXdR2sWF82J
uFxpTtvzbW/u3Pzcv/vd76plyxrPXz/mmGN8r9Obj9ek+Rzldtttpz766KNc
rrkZ822WpFXfmx7/5mzdw+Nqbxbyngodvbnp/tdXVlR3QgY6E3HRmVVBn6P0
Pqe0ZMmShscOGDDA97F9+vTpfEy3bt18H3P55Zfncj1J0JksScvlzjR5HwWP
1Hsp0Jn5sf3vI4sVtJo7UPpsu6jizLaBIFn/d2Vz+3k22ONS7QZc5uC5Y0Xl
nfFWa8CoDoQMtnuCxQpaRWvNU0891fc6R48e3fmYefPm+T5miy22sPjMw9Ga
MIHWRA2tWVy2u4LFClpRzWn7fove5yU//vjjhrV48eKGx7z66qvqRz/6ke/1
mfocpbf+53/+p7I3KG9x7rcIBLHRm56w5qzfw+Nibxb2ngpNvRnWnZDBdkuw
WEHL9c4M+hzlOuus0/LYv//9776P3XLLLTsfs+666/o+ZsSIEblcTxJ0Jkyg
M83eR8Ej9V4KdGZ+bP8Zz2JFrVoHSr/XYlHFudciECSrBgxqP89vvf7TbEAX
Py9TVN5r7deAfh0IGWx3BIsVtYrSmhtvvLHv9c2aNavhcX57Mr3zPprn5a6g
NWECrYkaWrO4bPcEixW1gpozaL7tnTNh0/vvv69uvPFGtfvuu1fODAq6LpOf
o/SWd9bHuHHjcr3WRYtXMt9GajZ60+M1Z1R3utqbxb2nQnBvNncnZLDdECxW
1HK1M4M+R9mjR4+Wx3qfR/J7rPfZyZoNN9zQ9zFXXnllLteTBJ0JE+hMs/dR
8Mi9lwKdmRfbf7azWFGr9h4eZ7a9YLHdnzWWycIlK5htIzXTDRjVfp71dxtc
Wa40IKqqDThSqwMhg+2OYLGiVpLPUbrWmgsWLFBrrbVWy7V5P0to1qtXL9/X
YfLkyRaeeTRaEybQmqihNYvLdk+wWFEr7nx73oeLcv/36J133lHnnnuu+uUv
f6l9XTqfo/Tujfbaa69VlvcaePdI23bbbQO/pnd/tDz3+Lw3fwnzbaRmozc9
us3Z3u5ebxb3ngq13hwZ2Z2QwXZDsFhRK2iObrszgz5Hueeee7Y89s033/R9
7I9//OPOx2y99da+jxk2bFgu15MEnQkT6Eyz91HwSL2XAp2ZH9t/trNYQav5
PTzObNvGzxrLKrQBmW1Dk6kG9N436u9jEKbWfw0NGNCBy5a7d+5YUVXPJB+p
1YGQwXZPsFhBK819vV1rzTvuuMP3Gn/2s5+pxx9/vGF5P6v0e+xxxx1n+zJ8
0ZowgdZEDa1ZXLa7gsUKWknvt/jyW/Nz+/dnxYoV6ogjjqh83jHu9el8jtI7
z9KP159BX3fw4MF5Xb6aMWcB822kZqM3PfXNGTbndrE3C3tPBd/e9O9OyGC7
JVisoBU1R7fdmUGfo/zTn/7U8tj33nvP97HenwE1PXv29H3MxRdfHPgcJk6c
qK677rqWNWPGjEyuuRmdCRPozGBJ7qPgkXovBTozP9dff33DP+8DDzzQ9lOC
47I6Ozio+2rizLbz/Flj2YU2ILNtaEr7vhK3/TzN/RfWgAsWLc3oytHMu6dE
cAOOpAEFojURV9at2TzLrpHcmt7cO+3rst5669m+DF+0JkygNVFDaxYXzYm4
XGnOoPn2A0+/k8vrsGrVKrX55puHXot37vn3vvc937+X5nOUy5cvr5yf7vdr
9tlnn1yu3zP9hQ+ZbyM1G73pCW3Ouu50rTeLfE+Fzzt6c5P9rotozuqCDHQm
4nJljm67M4M+R7n33nu3PFbnc5T77ruv72NOO+20wOfwq1/9yvfXXH311Zlc
czM6EybQmY3S3kfBI/VeCnRmfug/xJVV/0WdIbzZQaO1Z9t5NSAiGpDZNjQl
fV9J2n4ev/4LasB3/vGZ4StGkHkfLKg0oE4HQgZaE3Fl1ZpBs+waya3585//
PPXr4/2MYP58tz4f6qE1YQKtiRpas7hoTsRlqzl159ujJ+dzRs5NN90UeC3e
fXNHjBihPvroI3XzzTf7PibN5yg9W221le+v2WSTTfK4/IpxU+cw30ZqNnrT
E9SczXt4XOvNIt9Tob43O7szoD0hA52JuGzN0V3rTNP39T7kkEN8H3PYYYcF
Poef/vSnvr9mwoQJmVxzMzoTJtCZVabuo+CRei8FOjM/9B/iMt1/Ud1XE2e2
nVcDoqMBHwhpQGbb0BT3fSVqLqEjrP+aG/Cl1/9h6EoR5eU3P2xpwKAOhAy0
JuIy3Zq6f2ZIbc2g/dpJ1i233GL7clrQmjCB1kQNrVlcNCfistWcumegnzcy
3Z9Durp16+Z7PWeddVbD47L6HOWuu+7q+2t+8pOfZHbNzS6+ZQbzbaRmozc9
Os3prZdef9/AVZpT5HsqBPVmQ3vSm6LQmYjL1hzdtc4M+hxljx49Wh77/PPP
+z523XXX7XzMiSee6PuYnXbaKfA5fP3rX/f9NV635oHOhAl0ptn7KHik3kuB
zswP/Ye4TPVf3M/Ax5lt59WAiGhAZtvQpPu+Yqr9PL/Z7ZLIBqx14L2PvWHk
90S0+5+cHdmAtVk3ZKA1EZep1oz7Z4bU1rzxxhuN/Vy2X79+ti+nBa0JE2hN
1NCaxUVzIi5bzak73+43cEqGV9/l29/+dss1ffnLX1aff/55w+Oy+hxl0L3Y
ttxyy6wuucXhlzyldmC+jZRs9KZHtzld680i31Oh0pv7Xtu1QpoTMtCZiMvW
HN21zgz6HOU666zT8tjbbrstsgmDzjL+0Y9+5Pv7z549O/C1feONfP5cpDNh
Ap1p9j4KHqn3UqAz80P/Ia60/Zf0DOE4s+2+Z+fTgKg2YFT/0YCIEvW+Yrr9
PF7/6TbgyAlPGf29EezGO19sbMCQDoQMtCbiStuaSf/MkNqa+++/v+/rsPba
a1f2XPutr371q7F+7mgTrQkTaE3U0JrFRXMiLlvNqTvf3qb/ONXWtiqDK++y
YMEC32vbeOONWx570UUXRc6j4s6iHnroocrf8/s1f/7znzO77npt7avUH/42
jfk2UrPRm55ac0Z158jb3enNot9Twbc3A9oTMtCZiMvWHN2lzvQEfY7S67+l
S5c2PPb000/3fWyfPn06H7No0aLKfh+/x82aNavl97/gggsCf2bqfa2s0Zkw
hc40ex8Fj9R7KdCZ+aH/EFfS/kvafTVxZtvbHJJPA5ZdrQGZbSOtoPeVrNrP
U99/UQ14+vB7M3kOaHX21Q+FN2BdB0IGWhNxJW3NtH9mSG3N//qv//J9PYYM
GRL4a4LuleOtt956K8dnH47WhCm0JmpozeKiORGXrebUnW97a8bsjw1ecSvv
vA6/a/T6stn2228fOY/SnUV592QbP358YMd667zzzsv02mtmzv1c7XD0/Vrz
7R3pTYSw0Zse3eZ0qTeLfk+Fam9eE92cHQsy0JmIy9Yc3aXO9AR9jtJbV155
Zefjli1bpn72s59pNWHQeXB//OMf1erVqzsft3jx4sCzj3fZZZfMr91DZ8IU
OtPsfRQ8Uu+lQGfmh/5DXHH7z9R7eJzZ9hZ982nAsqs1ILNtpNX8vpJ1+3ma
+y+sA/c5/uZMnwu6HHjaBLVxRwNurNGBkIHWRFy0pr6ZM2cGvi5hr0lbW1vl
XEq/X+fdA8MVtCZMoTVRQ2sWF82JuCQ055gpMw1caTBv1vy1r33N93q9uZJn
5cqVasCAAYGvS307Bs2ivLXzzjurnXbaqXKOyL/927+Fvtbf+MY31Pvvv5/p
tdeMnza3Ot/WbE4giI3e9Og25z7Hj878uegq+j0VDjy1qzfrF70pF52JuOjM
qrDPUX7rW99SgwcPVrfffrvq1atX4OMef/zxhq8ZdMakt7zzzO+++241ceJE
tdFGGwU+ztvPkwc6E6aUvTNN30fBI/FeCh46Mz/0H+LS7T/T7+F6/ZdvA5Zd
rQGZbSOt2vtKXu3n+c1uF2s34MZ7D1Ur29pzeV5l5p3ttnmfkb4NWO3Aa2hA
gWhNxEVr6hs2bJjva+PNmFasWBH6a7fYYgvfX7vnnnvm9Oyj0ZowhdaEh9Ys
NpoTcbndnNXePPqSacZ+3yDrrbee73V7n1vabLPN1Pe///3Q1+fCCy/s/Fph
n6OMs5rvzZalk654lvk2jLDRm56w5qzvTpd6s9D3VIjozeb2hAx0JuKiM6vC
Pkeps/7zP/+zshe8nveeH7QPSGd95zvfUcuXL8/82j10Jkwpe2eavo+CR+K9
FOjMfNF/iCuq/7J6D487286jAcuu1oDMtpHW3Llzc20/T7X/9BrQWy+/8Y9c
n18ZvTLro46+u3rNiu5AyEBrIi5aU1/Pnj19X6NNNtkk8teecMIJvr/2u9/9
buXnAy6gNWEKrQkPrVls06dPb/jzLM/7KkEmt5uz2pu/P2ScWrJspfHnUO+y
yy5LNd8++eSTO7+Wic9Rdu/eXS1ZsiTTa65ZurxN7XzcVObbMMJGb3p+0+ti
7e50oTeLfk+Fxt68OrI9IQOdibjozKq0n6McNGiQ79cdPnx44q9Zfz/xLNGZ
MKnsnWn6PgoeifdSoDPzRf8hrqD+y/oz8HFn23k0YJnVNyCzbUhU6b8YDXjD
HU/bfsqFN3rSSwEN6N+BkIHWRFy0pp729vbKPXD8Xqujjz468td7980J+u//
5557LocrCEdrQjpa0z20ZrHRnIjL7eas9uYWfW9RU5+am9lz8SxevFj9+Mc/
jpw59+7d2/evb7755p1fK83nKP/5n/+5cm/HPPfzTH/ug87ZNvNtSNXanMHd
6UJvFv2eCuG92dqekIHORFx0ZlXQ5yi9zyZFtWG/fv1Cu/Dcc89Va621lnZr
emfM5XnmOZ2JInCpM03eR8Ej8V4KdGa+6D/E1dx/eZ0hHHe2nUcDlll9Awb2
3zHMtuGuzv7TnHH/5cy/237KhXfEeZM0G7C6IAOtibhoTT3efWyC/vt97Nix
kb/e2ycZ9OtHjhyZwxWEozUhHa3pHlqz2GhOxCWlOU8e/nDmz2n+/PmVcyD9
utA798ObU3tz7J/+9Ke+n3/09vd4nnnmGe15kzfv+sEPflD5HOYZZ5xh5b68
Z173IvNtiBenOf9y5njbT7fw91Q4vKM3N9rnqsra2Fv0ZiHQmYiLzqwaN26c
7/v2zTffrIYMGaK+/e1vt/y9b37zm5X3e+/8uSiPPfaY2mWXXdTaa68d2Jxf
+cpXVI8ePdQTTzyR6bU2ozNRBC51psn7KHik3UvBQ2fmi/5DXLX+y6v7anz7
r2/4Xpo8ftZYVvUNyGwbEq3X66LK8m/A1g7s1nuIWrI0fF80kvPOdNvsgKs7
G1CnBSEDrYm4aE14aE1IR2u6xWvN7vtdQ2sWGM2JuJxqzpD59lb9x6nPFi3N
5bnNmzevcma5N6OaNGmSmjVrVudnJIvmsy9WNNxrUbc5Adf4NmfAnNt2bxb9
ngpBvRnWnpCBzkRcdKYe77OSr7/+uho1apS69tpr1csvv5zoc/ELFixQjz/+
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
uzOoQyEDnQkp6Mx80JkoCzozf3SmO+g/SPG7PmZn21v2owGDVBrwqudC+o8z
ySFfV//Fa0C/fTUb7HaxeuXNf9i+JOe9OutDtcmfhnc1YMoWhAy0JqSgNfND
a6IMTLfmy2/QmlFemfUBrVliNCekML13Z8t+49S5I59Sq1evtn1pzvBei0Gj
X26abZtpTsA1jc2ZfM5Nb+rxfra58V7DVbc9hlVWS3fGbFDIQGdCCjoze3Qm
ysRkZzJDj+b9XJPOdAf9BylCZ9t9dfbStM62acBW1QZ8xbcBmW2jSFr7L6oD
W2fc9R3Y4+ARasHiZbYvy1mLFi9Xuxx2fWf/+a3QJvTpQshAa0IKWjMftCbK
gtbMF60JmhNSZLF3x2vOK8e/aPvSnHH1xNc72nKKT2+mb07ANfGbM3gfT4+D
r6Q3Q1R7c6TaYI+hlRXWnboNChnoTEhBZ2aPzkSZ0Jn5oTPdQ/9BirD+S3om
udd/NGCjagOa7z8aEK75dc/zQhow2b6awwfeyrljPrzX5IjzJqj19xzauWot
GKcHm7sQMtCakILWzAetibKgNfNDa8JDc0KKrPbueGv05Jm2L8+6W+6fvWa2
zXwb5VBtTnPdeRi96cuvN/1W3AaFDHQmpKAzs0VnomzozHzQmW6i/yBFff/p
7aXRn23TgFXhDVjXf0cx24Z8v9rlPOMN6K1Th07i3LE63msx4LJ7I/svqgn9
2hAy0JqQgtbMHq2JMqE180FroobmhBRZ7t2p7d8p458T3jV7+3W27WzNbJoT
cI3XnKa789Qh9Ga9Wm9usPuQujW0spI0aP2CDHQmpKAzs0FnoqzozOzRme6i
/yBF1rNtGvD1yP5jLw2KpNZ/+g2o34GXXD/d9uU5Y8hNDzf1n99K1oSQgdaE
FLRmdmhNlBGtmQ9aEzU0J6TIoznPHflUqc75aO+41kGjX6rMtnXm22maE3BN
fXOamXNfQG820evNZB0KGehMSEFnmkdnoszozOzRme6i/yCF13+hZ5K39F+8
M8lr67wSN2B4/3EmOYrlV7ucG9KA6ffVXPv3x21fonUjb38qRf9F9yFkoDUh
Ba2ZDVoTZUVrZo/WRD2aE1LEn2/rNOe4lnXC0IfVwiXLbV9u5r5YskKdMuIZ
td2R91RW1s0JuKbanNl0J71Z7c3f7nGp2qB5GWpOyEBnQgo60yw6E2VHZ2aL
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
f6dqUQMr6vk0XEfI9V50Le8fktGZkILOpDOBrNGZdGZZ0H+Qor7/fBswozPJ
/RswxzPJO1Z0/8k4JwiQwDsr6Nc7nd7VgbFm3RotaLoHA7owThtmuVqeV4xr
+vUfzqr884BstCakoDVpTSAPtCatiWzQnJCikM0p+Kyg6Bl3Y3MCUlwz7qFq
O9Y3p+H2zLw/I1o0bZtGfs1Uz7nrdfDOboJsdCakoDPpTCAPdCadWQb0H6SI
7D8Be2n8+q9lvq3Tf+ylATL18hvvqe0OHKzW6Wi+dfw6MHYLas688+hB51bd
ta55DbzXZPs+Q9Qrb75n+1sBBtCakILWpDWBvNCatCbMozkhBc0puzkBSR57
dpbarPf5nc0Z2J2G2zN69i29QZuupa4x69fme19Q+WcA+ehMSEFn0plAXuhM
OrPo6D9I0dx/fg3Y3H+m9tJs2c/yOUFa/ZfhXhpD5wQBkixbvlINvfF+9due
ZzZ0oNkWjNmDgU3oYhv6PL+A3utap6nf7jqw43WfqpavaLP9LQBDaE1IQWvS
mkCeaE1aE2bRnJCi1M1p4xx0w2cFAdIs/GKZGnjZXWrdHgNamlO7PTPoT98O
jWxRk10a8fW312nLrsasX7/c6Qx19vBJalHHa49ioDMhBZ1JZwJ5ojPpzCKj
/yBF9z43GtlLs3nf/PbSbNl/vNaZ5OylAdz12YKl6rIbp6qt97uoo/lOCWzB
yLOEEvVgvCYM7cPYnRjedvE6z7/36tfv979EDbvpAfX5wiW2/5HDMFoTUtCa
tCZgA61Ja8IMmhNS0Jw5Nmdtxm2wOQGpPvhogTrvyrtV9z3PXdOcpyRrTyP9
ma5D81ua17Hmdeje+/yO13hyx2u90PY/bhhGZ0IKOpPOBGygM+nMIqL/IEXS
/ivMXhrb5wSxlwZQL86cp64aM10ddsYo1aPvpWrj3c4O3WeTXw/a6sP4z23d
HqerjXc/p+P1G6oOO3O0uuqWB9VLr71r+x8tMkRrQgpak9YEbKM1aU0kR3NC
ClPzbbHNKfasoGp3AtK1t69ST74wW116/X3qL6fcoLY78BLVrddZ6hc7nJp+
7p15g1pa9dfScX2/2PG0jtfsbLVdn8Hq4FNv7Hgtp1ZeU++1RTHRmZCCzqQz
AZvoTDqzSOg/SOH1X/c+0WeSd1/Tf+ylce+cIABA+dCakILWpDUBAHLRnJDC
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
vA5t36hzHa+fh3W3O6r7HF/Vfa5nx/5xAwC0jc7UmQBAcd370FPh9Mk3hL1+
NTFsstsJYe2tDqv6nE37ejBWHzY+t1U3OTisvfXh3edvbNjrkAvC6b+5sXRe
AQCKTmtqTQCAVlqypCvcfs/j4YRzrgnf+eW54as7HxdGbnloWGWjA+re967a
ny1t0Eij71q617fKxgd2n7PDwld3OT7sccB53efyutI5zc4tAEBR6UydCQAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAJCq/w8MfoWB
     "], {{0, 370.}, {1321., 0}}, {0, 
     255},
     ColorFunction->RGBColor,
     ImageResolution->144],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->Automatic,
   ImageSizeRaw->{1321., 370.},
   PlotRange->{{0, 1321.}, {0, 370.}}]], "Input",ExpressionUUID->
  "52814d23-c819-41f6-a895-dcb095ca4c73"],
 "\n\n\n"
}], "Text",ExpressionUUID->"ed827821-fb39-40a2-bfc3-c97f5af59304"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"TemporalMemory", "[", 
     RowBox[{"t_Symbol", ",", 
      RowBox[{"{", 
       RowBox[{"n_Integer", ",", "p_Integer"}], "}"}]}], "]"}], ":=", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "M1", ",", "M2", ",", "overlap", ",", "y", ",", "c", ",", "u", ",", 
        "v", ",", "prediction"}], "}"}], ",", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"TriadicMemory", "[", 
        RowBox[{"M1", ",", 
         RowBox[{"{", 
          RowBox[{"n", ",", "p"}], "}"}]}], "]"}], ";", 
       RowBox[{"(*", " ", 
        RowBox[{"encodes", " ", "context"}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"TriadicMemory", "[", 
        RowBox[{"M2", ",", 
         RowBox[{"{", 
          RowBox[{"n", ",", "p"}], "}"}]}], "]"}], ";", 
       RowBox[{"(*", " ", 
        RowBox[{"stores", " ", "predictions"}], " ", "*)"}], 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"overlap", "[", 
         RowBox[{"a_SparseArray", ",", "b_SparseArray"}], "]"}], ":=", 
        RowBox[{"Total", "[", 
         RowBox[{"BitAnd", "[", 
          RowBox[{"a", ",", "b"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]",
        "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "initialize", " ", "state", " ", "variables", " ", "with", " ", 
         "null", " ", "vectors"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"y", "=", 
        RowBox[{"c", "=", 
         RowBox[{"u", "=", 
          RowBox[{"v", "=", 
           RowBox[{"prediction", "=", 
            RowBox[{"M1", "[", "0", "]"}]}]}]}]}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"t", "[", "inp_", "]"}], ":=", 
        RowBox[{"Module", "[", 
         RowBox[{
          RowBox[{"{", "x", "}"}], ",", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{
           "bundle", " ", "previous", " ", "input", " ", "with", " ", 
            "previous", " ", "context"}], " ", "*)"}], "\[IndentingNewLine]", 
          
          RowBox[{
           RowBox[{"x", "=", 
            RowBox[{"BitOr", "[", 
             RowBox[{"y", ",", "c"}], "]"}]}], ";", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"(*", " ", 
            RowBox[{
            "store", " ", "new", " ", "prediction", " ", "if", " ", 
             "necessary"}], " ", "*)"}], "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"prediction", "\[NotEqual]", 
              RowBox[{"(", 
               RowBox[{"y", "=", "inp"}], ")"}]}], ",", 
             RowBox[{"M2", "[", 
              RowBox[{"u", ",", "v", ",", "y"}], "]"}]}], "]"}], ";", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"(*", " ", 
            RowBox[{
            "create", " ", "new", " ", "random", " ", "context", " ", "if", 
             " ", "necessary"}], " ", "*)"}], "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"overlap", "[", 
               RowBox[{
                RowBox[{"M1", "[", 
                 RowBox[{"_", ",", "y", ",", 
                  RowBox[{"c", "=", 
                   RowBox[{"M1", "[", 
                    RowBox[{"x", ",", "y", ",", "_"}], "]"}]}]}], "]"}], ",", 
                "x"}], "]"}], "<", "p"}], ",", 
             RowBox[{"M1", "[", 
              RowBox[{"x", ",", "y", ",", 
               RowBox[{"c", "=", 
                RowBox[{"M1", "[", "]"}]}]}], "]"}]}], "]"}], ";", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"prediction", "=", 
            RowBox[{"M2", "[", 
             RowBox[{
              RowBox[{"u", "=", "x"}], ",", 
              RowBox[{"v", "=", "y"}], ",", "_"}], "]"}]}]}]}], 
         "\[IndentingNewLine]", "]"}]}]}]}], "\[IndentingNewLine]", 
     "\[IndentingNewLine]", "]"}]}], ";"}], "\n"}]], "Input",
 CellLabel->"In[1]:=",ExpressionUUID->"32058f0f-9a49-4ecc-814d-bc24429a8c1c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Configuration", "Subsection"]], "Subsection",ExpressionUUID->"f1faddf0-3c30-40b2-81e8-194992f9d76a"],

Cell[BoxData[
 RowBox[{"Get", "[", "  ", 
  RowBox[{
  "$UserBaseDirectory", " ", "<>", " ", 
   "\"\</TriadicMemory/triadicmemoryC.m\>\""}], "]"}]], "Input",
 CellLabel->"In[2]:=",ExpressionUUID->"6a0cb273-e4d1-4686-95ad-6b78e6b9049f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"n", " ", "=", " ", "500"}], ";", " ", 
  RowBox[{"p", " ", "=", " ", "5"}], ";"}]], "Input",
 CellLabel->"In[3]:=",ExpressionUUID->"d7fbfccd-433a-4574-9ac8-5f5381e24d5f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"TemporalMemory", "[", " ", 
   RowBox[{"T", ",", " ", 
    RowBox[{"{", 
     RowBox[{"n", ",", "p"}], "}"}]}], "]"}], ";"}]], "Input",
 CellLabel->"In[4]:=",ExpressionUUID->"1e77e772-2325-441f-8161-35e898cad326"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Encoder / Decoder", "Subsection",ExpressionUUID->"db936cf5-49a0-4a2d-b46a-335cd8862d35"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Encoder", "[", " ", 
     RowBox[{"e_Symbol", ",", " ", 
      RowBox[{"{", 
       RowBox[{"n_Integer", ",", " ", "p_Integer"}], "}"}]}], " ", "]"}], " ",
     ":=", " ", 
    RowBox[{"Module", "[", " ", 
     RowBox[{
      RowBox[{"{", "code", "}"}], ",", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"e", "[", "Null", "]"}], " ", "=", " ", 
        RowBox[{"SparseArray", "[", 
         RowBox[{
          RowBox[{"{", "0", "}"}], ",", " ", 
          RowBox[{"{", "n", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"e", "[", 
         RowBox[{"{", "}"}], "]"}], " ", "=", " ", "Null"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"e", "[", "x_SparseArray", "]"}], " ", ":=", " ", 
        RowBox[{"Module", "[", " ", 
         RowBox[{
          RowBox[{"{", "s", "}"}], ",", " ", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"s", " ", "=", " ", 
            RowBox[{"e", "[", " ", 
             RowBox[{
              RowBox[{"Flatten", "[", 
               RowBox[{"x", "[", "\"\<NonzeroPositions\>\"", "]"}], "]"}], "//",
               "Sort"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"If", "[", " ", 
            RowBox[{
             RowBox[{
              RowBox[{"Head", "[", "s", "]"}], " ", "===", " ", 
              "SparseArray"}], ",", " ", 
             RowBox[{"ToString", "[", 
              RowBox[{"Sort", "[", 
               RowBox[{"Flatten", "[", 
                RowBox[{"x", "[", "\"\<NonzeroPositions\>\"", "]"}], "]"}], 
               "]"}], "]"}], ",", " ", "s"}], "]"}]}]}], "]"}]}], " ", ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"e", "[", "s_", "]"}], " ", ":=", " ", 
        RowBox[{
         RowBox[{"e", "[", "s", "]"}], " ", "=", "  ", 
         RowBox[{"Module", "[", " ", 
          RowBox[{
           RowBox[{"{", "r", "}"}], ",", " ", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"r", " ", "=", " ", 
             RowBox[{"SparseArray", "[", "  ", 
              RowBox[{
               RowBox[{
                RowBox[{"RandomSample", "[", " ", 
                 RowBox[{
                  RowBox[{"Range", "[", "n", "]"}], ",", " ", "p"}], "]"}], 
                "\[Rule]", " ", 
                RowBox[{"Table", "[", 
                 RowBox[{"1", ",", " ", 
                  RowBox[{"{", "p", "}"}]}], "]"}]}], ",", " ", 
               RowBox[{"{", "n", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]",
             "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"e", "[", " ", 
              RowBox[{"Sort", "[", 
               RowBox[{"Flatten", "[", 
                RowBox[{"r", "[", "\"\<NonzeroPositions\>\"", "]"}], "]"}], 
               "]"}], "]"}], " ", "=", " ", "s"}], ";", " ", "r"}]}], 
          "]"}]}]}], ";"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\[IndentingNewLine]"}]], "Input",
 CellLabel->"In[5]:=",ExpressionUUID->"37379346-a0a2-4ce5-b98f-3a9c5337055c"],

Cell[BoxData[
 RowBox[{"Encoder", "[", " ", 
  RowBox[{"e", ",", " ", 
   RowBox[{"{", 
    RowBox[{"n", ",", " ", "p"}], "}"}]}], "]"}]], "Input",
 CellLabel->"In[6]:=",ExpressionUUID->"58fa73b1-95fb-48c8-9ed1-a065a2ee8695"]
}, Closed]],

Cell[CellGroupData[{

Cell["Timing", "Subsection",ExpressionUUID->"6b445cd4-0dde-4b87-9c2b-db436ccaacda"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"timing", "[", " ", 
    RowBox[{"s_String", ",", " ", "repetitions_Integer"}], "]"}], " ", ":=", 
   " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"ch", ",", " ", "b", ",", " ", "symb"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"a", " ", "=", " ", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Join", "[", " ", 
         RowBox[{"Table", "[", " ", 
          RowBox[{
           RowBox[{"Characters", "[", "s", "]"}], ",", " ", "repetitions"}], 
          "]"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"AbsoluteTiming", "[", " ", 
        RowBox[{
         RowBox[{"T", " ", "/@", " ", 
          RowBox[{"e", " ", "/@", " ", "a"}]}], ";"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]], "Input",
 CellLabel->"In[7]:=",ExpressionUUID->"1e23f21a-38ae-44dc-b7f2-13e37fe4b401"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"timing", "[", " ", 
  RowBox[{"\"\<!@#$%^&\>\"", ",", " ", "1000"}], "]"}]], "Input",
 CellLabel->"In[8]:=",ExpressionUUID->"5a666ea9-42ec-4fb0-bb82-1893f2a44f74"],

Cell[BoxData["6.802264`"], "Output",
 CellLabel->"Out[8]=",ExpressionUUID->"1c12e8e4-9218-4b4d-ab5c-613f33950e95"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Test function", "Subsection",ExpressionUUID->"c8f6c7ec-7d00-49a5-9397-71cad70ded7d"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"temporalmemorytest", "[", " ", 
    RowBox[{"s_String", ",", " ", "repetitions_Integer"}], "]"}], " ", ":=", 
   " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"b", ",", " ", "symb"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"a", " ", "=", " ", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Join", "[", " ", 
         RowBox[{"Table", "[", " ", 
          RowBox[{
           RowBox[{"Characters", "[", "s", "]"}], ",", " ", "repetitions"}], 
          "]"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"b", " ", "=", " ", 
       RowBox[{"e", " ", "/@", " ", 
        RowBox[{"T", " ", "/@", " ", 
         RowBox[{"e", " ", "/@", " ", "a"}]}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Row", "[", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
           RowBox[{"If", "[", " ", 
            RowBox[{
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}], " ", "===", " ", 
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], ",", " ", "Black", ",", " ", 
             "Red"}], "]"}]}], "]"}], " ", "&"}], " ", "/@", " ", 
        "\[IndentingNewLine]", 
        RowBox[{"Transpose", "[", " ", 
         RowBox[{"{", 
          RowBox[{"a", ",", " ", 
           RowBox[{"Most", "[", 
            RowBox[{"Prepend", "[", 
             RowBox[{"b", ",", " ", "Null"}], "]"}], "]"}]}], "}"}], "]"}]}], 
       "]"}]}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], 
  ";"}]], "Input",
 CellLabel->"In[9]:=",ExpressionUUID->"9487f2ab-6bb9-48cf-8611-a521e3411df0"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Tests", "Subsection",ExpressionUUID->"4eb40acb-26ca-45eb-a29c-1d4b08fc0205"],

Cell["\<\
The following tests are run in a single session. The temporal memory \
processes a stream of characters with repeating patterns, at each step making \
a prediction for the next character. Correct predictions are shown in black, \
mispredictions in red. 

Note that all characters are test input, we\[CloseCurlyQuote]re not using the \
temporal memory to auto-continue a sequence here.

\
\>", "Text",ExpressionUUID->"28309a5e-fb41-44e6-9f99-a4f16057161e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"temporalmemorytest", " ", "[", "  ", 
  RowBox[{"\"\<ABC\>\"", ",", " ", "8"}], " ", "]"}]], "Input",
 CellLabel->"In[10]:=",ExpressionUUID->"6b610a82-20a9-4c5a-9bfd-f1fb113aa24a"],

Cell[BoxData[
 TemplateBox[{
   StyleBox["\"A\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"B\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"C\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"A\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"B\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"C\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"A\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"B\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"C\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"A\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"B\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"C\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"A\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"B\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"C\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"A\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"B\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"C\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"A\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"B\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"C\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"A\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"B\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"C\"", 
    GrayLevel[0], StripOnInput -> False]},
  "RowDefault"]], "Output",
 CellLabel->"Out[10]=",ExpressionUUID->"05eb62c6-e4d1-4c7b-b32b-69188906c723"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"temporalmemorytest", " ", "[", "  ", 
  RowBox[{"\"\<kiwi\>\"", ",", " ", "8"}], "]"}]], "Input",
 CellLabel->"In[11]:=",ExpressionUUID->"6b8974d0-b718-4542-b5ea-28e46dd8532e"],

Cell[BoxData[
 TemplateBox[{
   StyleBox["\"k\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"i\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"w\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"i\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"k\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"i\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"w\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"i\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"k\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"i\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"w\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"i\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"k\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"i\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"w\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"i\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"k\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"i\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"w\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"i\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"k\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"i\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"w\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"i\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"k\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"i\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"w\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"i\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"k\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"i\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"w\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"i\"", 
    GrayLevel[0], StripOnInput -> False]},
  "RowDefault"]], "Output",
 CellLabel->"Out[11]=",ExpressionUUID->"9196f44b-48f2-4e75-80ea-ba21329ed247"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"temporalmemorytest", " ", "[", "  ", 
  RowBox[{"\"\<apple\>\"", ",", " ", "8"}], "]"}]], "Input",
 CellLabel->"In[12]:=",ExpressionUUID->"fbe97f19-b3cd-4db7-8dc7-48afa1b1d63b"],

Cell[BoxData[
 TemplateBox[{
   StyleBox["\"a\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"p\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"p\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"l\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"e\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"a\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"p\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"p\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"l\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"e\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"a\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"p\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"p\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"l\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"e\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"a\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"p\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"p\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"l\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"e\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"a\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"p\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"p\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"l\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"e\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"a\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"p\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"p\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"l\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"e\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"a\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"p\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"p\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"l\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"e\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"a\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"p\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"p\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"l\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"e\"", 
    GrayLevel[0], StripOnInput -> False]},
  "RowDefault"]], "Output",
 CellLabel->"Out[12]=",ExpressionUUID->"d16f927c-6260-4758-ac66-5eb528200705"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"temporalmemorytest", " ", "[", "  ", 
  RowBox[{"\"\<pepper\>\"", ",", " ", "8"}], "]"}]], "Input",
 CellLabel->"In[13]:=",ExpressionUUID->"57badf35-6f25-40e5-ba91-790271c5de60"],

Cell[BoxData[
 TemplateBox[{
   StyleBox["\"p\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"e\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"p\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"p\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"e\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"r\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"p\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"e\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"p\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"p\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"e\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"r\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"p\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"e\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"p\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"p\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"e\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"r\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"p\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"e\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"p\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"p\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"e\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"r\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"p\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"e\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"p\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"p\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"e\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"r\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"p\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"e\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"p\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"p\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"e\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"r\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"p\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"e\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"p\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"p\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"e\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"r\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"p\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"e\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"p\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"p\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"e\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"r\"", 
    GrayLevel[0], StripOnInput -> False]},
  "RowDefault"]], "Output",
 CellLabel->"Out[13]=",ExpressionUUID->"02f589ea-a486-4ddf-9f9a-0a87a749bf9c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"temporalmemorytest", " ", "[", "  ", 
  RowBox[{"\"\<tomato\>\"", ",", " ", "8"}], "]"}]], "Input",
 CellLabel->"In[14]:=",ExpressionUUID->"4c9779df-c3df-4f43-b3b0-2c491cd4d638"],

Cell[BoxData[
 TemplateBox[{
   StyleBox["\"t\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"o\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"m\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"a\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"t\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"o\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"t\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"o\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"m\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"a\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"t\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"o\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"t\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"o\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"m\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"a\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"t\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"o\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"t\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"o\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"m\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"a\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"t\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"o\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"t\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"o\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"m\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"a\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"t\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"o\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"t\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"o\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"m\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"a\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"t\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"o\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"t\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"o\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"m\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"a\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"t\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"o\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"t\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"o\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"m\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"a\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"t\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"o\"", 
    GrayLevel[0], StripOnInput -> False]},
  "RowDefault"]], "Output",
 CellLabel->"Out[14]=",ExpressionUUID->"ec560537-8bc2-4d0f-9768-284bd1f31b7b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"temporalmemorytest", " ", "[", "  ", 
  RowBox[{"\"\<banana\>\"", ",", " ", "8"}], "]"}]], "Input",
 CellLabel->"In[15]:=",ExpressionUUID->"57fcf4c5-dbab-4a1b-bcf0-77aed2c091e0"],

Cell[BoxData[
 TemplateBox[{
   StyleBox["\"b\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"a\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"n\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"a\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"n\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"a\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"b\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"a\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"n\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"a\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"n\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"a\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"b\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"a\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"n\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"a\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"n\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"a\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"b\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"a\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"n\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"a\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"n\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"a\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"b\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"a\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"n\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"a\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"n\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"a\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"b\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"a\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"n\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"a\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"n\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"a\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"b\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"a\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"n\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"a\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"n\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"a\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"b\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"a\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"n\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"a\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"n\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"a\"", 
    GrayLevel[0], StripOnInput -> False]},
  "RowDefault"]], "Output",
 CellLabel->"Out[15]=",ExpressionUUID->"1e522bf7-9847-4691-b375-6707d614613b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"temporalmemorytest", " ", "[", "  ", 
  RowBox[{"\"\<wiriwirichili\>\"", ",", " ", "8"}], "]"}]], "Input",
 CellLabel->"In[16]:=",ExpressionUUID->"fc40aff0-5501-4a70-84be-b3b8ef0b443e"],

Cell[BoxData[
 TemplateBox[{
   StyleBox["\"w\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"i\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"r\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"i\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"w\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"i\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"r\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"i\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"c\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"h\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"i\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"l\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"i\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"w\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"i\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"r\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"i\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"w\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"i\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"r\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"i\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"c\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"h\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"i\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"l\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"i\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"w\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"i\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"r\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"i\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"w\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"i\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"r\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"i\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"c\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"h\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"i\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"l\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"i\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"w\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"i\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"r\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"i\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"w\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"i\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"r\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"i\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"c\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"h\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"i\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"l\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"i\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"w\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"i\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"r\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"i\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"w\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"i\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"r\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"i\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"c\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"h\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"i\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"l\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"i\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"w\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"i\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"r\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"i\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"w\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"i\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"r\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"i\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"c\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"h\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"i\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"l\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"i\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"w\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"i\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"r\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"i\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"w\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"i\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"r\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"i\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"c\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"h\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"i\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"l\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"i\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"w\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"i\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"r\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"i\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"w\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"i\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"r\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"i\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"c\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"h\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"i\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"l\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"i\"", 
    GrayLevel[0], StripOnInput -> False]},
  "RowDefault"]], "Output",
 CellLabel->"Out[16]=",ExpressionUUID->"c09f2c22-a114-425f-b3ce-8c690783a10d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"temporalmemorytest", " ", "[", "  ", 
  RowBox[{"\"\<alfalfa\>\"", ",", " ", "20"}], "]"}]], "Input",
 CellLabel->"In[17]:=",ExpressionUUID->"bdcb9355-e3c5-49dc-b2d4-8ca39240fa2c"],

Cell[BoxData[
 TemplateBox[{
   StyleBox["\"a\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"l\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"f\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"a\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"l\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"f\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"a\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"a\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"l\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"f\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"a\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"l\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"f\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"a\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"a\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"l\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"f\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"a\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"l\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"f\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"a\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"a\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"l\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"f\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"a\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"l\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"f\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"a\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"a\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"l\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"f\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"a\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"l\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"f\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"a\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"a\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"l\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"f\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"a\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"l\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"f\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"a\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"a\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"l\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"f\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"a\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"l\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"f\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"a\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"a\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"l\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"f\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"a\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"l\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"f\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"a\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"a\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"l\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"f\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"a\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"l\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"f\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"a\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"a\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"l\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"f\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"a\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"l\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"f\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"a\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"a\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"l\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"f\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"a\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"l\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"f\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"a\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"a\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"l\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"f\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"a\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"l\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"f\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"a\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"a\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"l\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"f\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"a\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"l\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"f\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"a\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"a\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"l\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"f\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"a\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"l\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"f\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"a\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"a\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"l\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"f\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"a\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"l\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"f\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"a\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"a\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"l\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"f\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"a\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"l\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"f\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"a\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"a\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"l\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"f\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"a\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"l\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"f\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"a\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"a\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"l\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"f\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"a\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"l\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"f\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"a\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"a\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"l\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"f\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"a\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"l\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"f\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"a\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"a\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"l\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"f\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"a\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"l\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"f\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"a\"", 
    GrayLevel[0], StripOnInput -> False]},
  "RowDefault"]], "Output",
 CellLabel->"Out[17]=",ExpressionUUID->"a2fc8250-97d0-4779-a546-f7817978dd9e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"temporalmemorytest", " ", "[", " ", 
  RowBox[{
  "\"\<A quick brown fox jumps over the lazy dog. \>\"", ",", " ", "4"}], 
  "]"}]], "Input",
 CellLabel->"In[18]:=",ExpressionUUID->"e867640e-3bfc-4d7f-b272-67b56e29f20b"],

Cell[BoxData[
 TemplateBox[{
   StyleBox["\"A\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\" \"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"q\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"u\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"i\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"c\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"k\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\" \"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"b\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"r\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"o\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"w\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"n\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\" \"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"f\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"o\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"x\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\" \"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"j\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"u\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"m\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"p\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"s\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\" \"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"o\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"v\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"e\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"r\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\" \"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"t\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"h\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"e\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\" \"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"l\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"a\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"z\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"y\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\" \"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"d\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"o\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"g\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\".\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\" \"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"A\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\" \"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"q\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"u\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"i\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"c\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"k\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\" \"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"b\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"r\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"o\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"w\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"n\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\" \"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"f\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"o\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"x\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\" \"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"j\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"u\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"m\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"p\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"s\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\" \"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"o\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"v\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"e\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"r\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\" \"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"t\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"h\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"e\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\" \"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"l\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"a\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"z\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"y\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\" \"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"d\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"o\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"g\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\".\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\" \"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"A\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\" \"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"q\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"u\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"i\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"c\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"k\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\" \"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"b\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"r\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"o\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"w\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"n\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\" \"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"f\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"o\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"x\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\" \"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"j\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"u\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"m\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"p\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"s\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\" \"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"o\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"v\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"e\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"r\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\" \"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"t\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"h\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"e\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\" \"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"l\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"a\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"z\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"y\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\" \"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"d\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"o\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"g\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\".\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\" \"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"A\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\" \"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"q\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"u\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"i\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"c\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"k\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\" \"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"b\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"r\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"o\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"w\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"n\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\" \"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"f\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"o\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"x\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\" \"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"j\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"u\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"m\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"p\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"s\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\" \"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"o\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"v\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"e\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"r\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\" \"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"t\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"h\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"e\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\" \"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"l\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"a\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"z\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"y\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\" \"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"d\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"o\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"g\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\".\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\" \"", 
    GrayLevel[0], StripOnInput -> False]},
  "RowDefault"]], "Output",
 CellLabel->"Out[18]=",ExpressionUUID->"d35d84fe-dba5-4182-a237-a55dc2c3176b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"temporalmemorytest", " ", "[", " ", 
  RowBox[{
   RowBox[{"StringDrop", "[", " ", 
    RowBox[{
     RowBox[{"ToString", "[", 
      RowBox[{"N", "[", 
       RowBox[{"Pi", ",", "100"}], "]"}], "]"}], ",", " ", 
     RowBox[{"{", "2", "}"}]}], "]"}], ",", " ", "5"}], "]"}]], "Input",
 CellLabel->"In[19]:=",ExpressionUUID->"3efdfc76-0c3d-47e3-a54b-277054557933"],

Cell[BoxData[
 TemplateBox[{
   StyleBox["\"3\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"1\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"4\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"1\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"5\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"9\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"2\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"6\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"5\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"3\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"5\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"8\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"9\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"7\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"9\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"3\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"2\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"3\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"8\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"4\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"6\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"2\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"6\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"4\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"3\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"3\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"8\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"3\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"2\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"7\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"9\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"5\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"0\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"2\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"8\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"8\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"4\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"1\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"9\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"7\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"1\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"6\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"9\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"3\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"9\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"9\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"3\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"7\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"5\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"1\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"0\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"5\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"8\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"2\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"0\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"9\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"7\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"4\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"9\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"4\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"4\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"5\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"9\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"2\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"3\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"0\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"7\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"8\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"1\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"6\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"4\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"0\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"6\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"2\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"8\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"6\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"2\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"0\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"8\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"9\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"9\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"8\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"6\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"2\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"8\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"0\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"3\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"4\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"8\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"2\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"5\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"3\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"4\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"2\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"1\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"1\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"7\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"0\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"6\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"8\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"3\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"1\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"4\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"1\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"5\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"9\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"2\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"6\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"5\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"3\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"5\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"8\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"9\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"7\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"9\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"3\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"2\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"3\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"8\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"4\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"6\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"2\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"6\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"4\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"3\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"3\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"8\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"3\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"2\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"7\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"9\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"5\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"0\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"2\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"8\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"8\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"4\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"1\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"9\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"7\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"1\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"6\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"9\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"3\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"9\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"9\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"3\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"7\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"5\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"1\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"0\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"5\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"8\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"2\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"0\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"9\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"7\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"4\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"9\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"4\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"4\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"5\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"9\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"2\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"3\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"0\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"7\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"8\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"1\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"6\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"4\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"0\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"6\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"2\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"8\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"6\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"2\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"0\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"8\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"9\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"9\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"8\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"6\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"2\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"8\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"0\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"3\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"4\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"8\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"2\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"5\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"3\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"4\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"2\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"1\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"1\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"7\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"0\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"6\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"8\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"3\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"1\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"4\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"1\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"5\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"9\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"2\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"6\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"5\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"3\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"5\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"8\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"9\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"7\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"9\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"3\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"2\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"3\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"8\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"4\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"6\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"2\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"6\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"4\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"3\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"3\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"8\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"3\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"2\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"7\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"9\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"5\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"0\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"2\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"8\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"8\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"4\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"1\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"9\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"7\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"1\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"6\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"9\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"3\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"9\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"9\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"3\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"7\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"5\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"1\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"0\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"5\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"8\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"2\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"0\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"9\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"7\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"4\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"9\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"4\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"4\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"5\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"9\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"2\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"3\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"0\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"7\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"8\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"1\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"6\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"4\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"0\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"6\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"2\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"8\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"6\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"2\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"0\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"8\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"9\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"9\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"8\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"6\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"2\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"8\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"0\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"3\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"4\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"8\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"2\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"5\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"3\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"4\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"2\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"1\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"1\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"7\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"0\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"6\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"8\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"3\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"1\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"4\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"1\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"5\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"9\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"2\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"6\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"5\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"3\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"5\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"8\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"9\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"7\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"9\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"3\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"2\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"3\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"8\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"4\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"6\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"2\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"6\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"4\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"3\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"3\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"8\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"3\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"2\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"7\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"9\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"5\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"0\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"2\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"8\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"8\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"4\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"1\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"9\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"7\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"1\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"6\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"9\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"3\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"9\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"9\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"3\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"7\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"5\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"1\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"0\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"5\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"8\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"2\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"0\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"9\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"7\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"4\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"9\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"4\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"4\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"5\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"9\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"2\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"3\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"0\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"7\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"8\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"1\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"6\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"4\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"0\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"6\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"2\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"8\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"6\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"2\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"0\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"8\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"9\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"9\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"8\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"6\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"2\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"8\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"0\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"3\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"4\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"8\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"2\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"5\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"3\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"4\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"2\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"1\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"1\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"7\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"0\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"6\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"8\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"3\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"1\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"4\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"1\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"5\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"9\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"2\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"6\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"5\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"3\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"5\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"8\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"9\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"7\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"9\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"3\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"2\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"3\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"8\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"4\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"6\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"2\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"6\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"4\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"3\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"3\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"8\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"3\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"2\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"7\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"9\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"5\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"0\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"2\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"8\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"8\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"4\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"1\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"9\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"7\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"1\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"6\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"9\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"3\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"9\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"9\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"3\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"7\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"5\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"1\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"0\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"5\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"8\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"2\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"0\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"9\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"7\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"4\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"9\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"4\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"4\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"5\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"9\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"2\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"3\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"0\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"7\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"8\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"1\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"6\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"4\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"0\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"6\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"2\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"8\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"6\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"2\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"0\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"8\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"9\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"9\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"8\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"6\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"2\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"8\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"0\"", 
    RGBColor[1, 0, 0], StripOnInput -> False], 
   StyleBox["\"3\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"4\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"8\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"2\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"5\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"3\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"4\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"2\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"1\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"1\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"7\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"0\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"6\"", 
    GrayLevel[0], StripOnInput -> False], 
   StyleBox["\"8\"", 
    GrayLevel[0], StripOnInput -> False]},
  "RowDefault"]], "Output",
 CellLabel->"Out[19]=",ExpressionUUID->"ca6f976b-39f2-42da-8776-3dbcf7d1ea1c"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1108, 1003},
WindowMargins->{{69, Automatic}, {Automatic, 4}},
PrintingCopies->1,
PrintingPageRange->{1, Automatic},
TaggingRules->{"TryRealOnly" -> False},
Magnification:>1.25 Inherited,
FrontEndVersion->"12.1 for Mac OS X x86 (64-bit) (June 19, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"4df8e693-47dc-4049-9c05-c2f0330fe39a"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[422, 15, 116, 0, 67, "Subsection",ExpressionUUID->"b0407cdc-a0b0-403f-8241-b4228ce62651"],
Cell[541, 17, 694, 18, 303, "Text",ExpressionUUID->"f28cdd66-877d-4532-b44e-f14d86f80b00",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[1238, 37, 164909, 2716, 700, "Text",ExpressionUUID->"ed827821-fb39-40a2-bfc3-c97f5af59304"],
Cell[166150, 2755, 4246, 104, 740, "Input",ExpressionUUID->"32058f0f-9a49-4ecc-814d-bc24429a8c1c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[170433, 2864, 124, 0, 67, "Subsection",ExpressionUUID->"f1faddf0-3c30-40b2-81e8-194992f9d76a"],
Cell[170560, 2866, 236, 5, 37, "Input",ExpressionUUID->"6a0cb273-e4d1-4686-95ad-6b78e6b9049f"],
Cell[170799, 2873, 205, 4, 37, "Input",ExpressionUUID->"d7fbfccd-433a-4574-9ac8-5f5381e24d5f"],
Cell[171007, 2879, 248, 6, 37, "Input",ExpressionUUID->"1e77e772-2325-441f-8161-35e898cad326"]
}, Open  ]],
Cell[CellGroupData[{
Cell[171292, 2890, 94, 0, 67, "Subsection",ExpressionUUID->"db936cf5-49a0-4a2d-b46a-335cd8862d35"],
Cell[171389, 2892, 3185, 76, 428, "Input",ExpressionUUID->"37379346-a0a2-4ce5-b98f-3a9c5337055c"],
Cell[174577, 2970, 225, 5, 37, "Input",ExpressionUUID->"58fa73b1-95fb-48c8-9ed1-a065a2ee8695"]
}, Closed]],
Cell[CellGroupData[{
Cell[174839, 2980, 83, 0, 46, "Subsection",ExpressionUUID->"6b445cd4-0dde-4b87-9c2b-db436ccaacda"],
Cell[174925, 2982, 977, 26, 116, "Input",ExpressionUUID->"1e23f21a-38ae-44dc-b7f2-13e37fe4b401"],
Cell[CellGroupData[{
Cell[175927, 3012, 187, 3, 37, "Input",ExpressionUUID->"5a666ea9-42ec-4fb0-bb82-1893f2a44f74"],
Cell[176117, 3017, 114, 1, 42, "Output",ExpressionUUID->"1c12e8e4-9218-4b4d-ab5c-613f33950e95"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[176280, 3024, 90, 0, 67, "Subsection",ExpressionUUID->"c8f6c7ec-7d00-49a5-9397-71cad70ded7d"],
Cell[176373, 3026, 1807, 46, 194, "Input",ExpressionUUID->"9487f2ab-6bb9-48cf-8611-a521e3411df0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[178217, 3077, 82, 0, 67, "Subsection",ExpressionUUID->"4eb40acb-26ca-45eb-a29c-1d4b08fc0205"],
Cell[178302, 3079, 465, 10, 217, "Text",ExpressionUUID->"28309a5e-fb41-44e6-9f99-a4f16057161e"],
Cell[CellGroupData[{
Cell[178792, 3093, 204, 3, 37, "Input",ExpressionUUID->"6b610a82-20a9-4c5a-9bfd-f1fb113aa24a"],
Cell[178999, 3098, 1720, 51, 42, "Output",ExpressionUUID->"05eb62c6-e4d1-4c7b-b32b-69188906c723"]
}, Open  ]],
Cell[CellGroupData[{
Cell[180756, 3154, 200, 3, 37, "Input",ExpressionUUID->"6b8974d0-b718-4542-b5ea-28e46dd8532e"],
Cell[180959, 3159, 2245, 67, 42, "Output",ExpressionUUID->"9196f44b-48f2-4e75-80ea-ba21329ed247"]
}, Open  ]],
Cell[CellGroupData[{
Cell[183241, 3231, 201, 3, 37, "Input",ExpressionUUID->"fbe97f19-b3cd-4db7-8dc7-48afa1b1d63b"],
Cell[183445, 3236, 2770, 83, 42, "Output",ExpressionUUID->"d16f927c-6260-4758-ac66-5eb528200705"]
}, Open  ]],
Cell[CellGroupData[{
Cell[186252, 3324, 202, 3, 37, "Input",ExpressionUUID->"57badf35-6f25-40e5-ba91-790271c5de60"],
Cell[186457, 3329, 3300, 99, 42, "Output",ExpressionUUID->"02f589ea-a486-4ddf-9f9a-0a87a749bf9c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[189794, 3433, 202, 3, 37, "Input",ExpressionUUID->"4c9779df-c3df-4f43-b3b0-2c491cd4d638"],
Cell[189999, 3438, 3300, 99, 42, "Output",ExpressionUUID->"ec560537-8bc2-4d0f-9768-284bd1f31b7b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[193336, 3542, 202, 3, 37, "Input",ExpressionUUID->"57fcf4c5-dbab-4a1b-bcf0-77aed2c091e0"],
Cell[193541, 3547, 3355, 99, 42, "Output",ExpressionUUID->"1e522bf7-9847-4691-b375-6707d614613b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[196933, 3651, 209, 3, 37, "Input",ExpressionUUID->"fc40aff0-5501-4a70-84be-b3b8ef0b443e"],
Cell[197145, 3656, 7015, 211, 69, "Output",ExpressionUUID->"c09f2c22-a114-425f-b3ce-8c690783a10d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[204197, 3872, 204, 3, 37, "Input",ExpressionUUID->"bdcb9355-e3c5-49dc-b2d4-8ca39240fa2c"],
Cell[204404, 3877, 9455, 283, 69, "Output",ExpressionUUID->"a2fc8250-97d0-4779-a546-f7817978dd9e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[213896, 4165, 244, 5, 37, "Input",ExpressionUUID->"e867640e-3bfc-4d7f-b272-67b56e29f20b"],
Cell[214143, 4172, 11535, 347, 69, "Output",ExpressionUUID->"d35d84fe-dba5-4182-a237-a55dc2c3176b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[225715, 4524, 388, 9, 37, "Input",ExpressionUUID->"3efdfc76-0c3d-47e3-a54b-277054557933"],
Cell[226106, 4535, 33290, 1003, 173, "Output",ExpressionUUID->"ca6f976b-39f2-42da-8776-3dbcf7d1ea1c"]
}, Open  ]]
}, Open  ]]
}
]
*)

